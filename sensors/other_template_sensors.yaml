  - platform: template
    sensors:
      bike_day:
        friendly_name: "Bike Day"
        value_template: >-
          {% if states('sensor.pirateweather_daytime_high_temperature_0d')|float < 27
             and states('ensor.weatherflow_air_temperature')|float > 14 
             and states('sensor.pirateweather_wind_gust')|float < 20
             and (states('sensor.pirateweather_precip_probability_0d')|float < 30
             or ((states('sensor.pirateweather_precip_intensity_1h')|float < 0.05)
             and (states('sensor.pirateweather_precip_intensity_2h')|float < 0.05)
             and (states('sensor.pirateweather_precip_intensity_3h')|float < 0.05)
             and (states('sensor.pirateweather_precip_intensity_4h')|float < 0.05)
             and (states('sensor.pirateweather_precip_intensity_5h')|float < 0.05)
             and (states('sensor.pirateweather_precip_intensity_6h')|float < 0.05)
             and (states('sensor.pirateweather_precip_intensity_7h')|float < 0.05)
             and (states('sensor.pirateweather_precip_intensity_8h')|float < 0.05)
             and (states('sensor.pirateweather_precip_intensity_9h')|float < 0.05))) %}
            yes
          {% else %}
            no
          {% endif %}


  - platform: template
    sensors:
      alenas_phone_battery:
        friendly_name: "Alena's Phone Battery"
        value_template: >-
          {% if is_state('sensor.alenas_iphone_battery_state', 'unknown') %}
            Unknown
          {% elif is_state('sensor.alenas_iphone_battery_level', 'unknown') %}
            Unknown
          {% elif is_state('sensor.alenas_iphone_battery_state', 'Charging') %}
            Charging
          {% elif states('sensor.alenas_iphone_battery_level')|float < 15 %}
            Very Low
          {% elif states('sensor.alenas_iphone_battery_level')|float < 25 %}
            Low
          {% elif states('sensor.alenas_iphone_battery_level')|float < 40 %}
            Needs Charging
          {% elif states('sensor.alenas_iphone_battery_level')|float < 70 %}
            Good
          {% else %}
            Charged
          {% endif %}

  - platform: template
    sensors:
      sophies_phone_battery:
        friendly_name: "Sophie's Phone Battery"
        value_template: >-
          {% if is_state('sensor.sophies_iphone_se_battery_state', 'unknown') %}
            Unknown
          {% elif is_state('sensor.sophies_iphone_se_battery_level', 'unknown') %}
            Unknown
          {% elif is_state('sensor.sophies_iphone_se_battery_state', 'Charging') %}
            Charging
          {% elif states('sensor.sophies_iphone_se_battery_level')|float < 15 %}
            Very Low
          {% elif states('sensor.sophies_iphone_se_battery_level')|float < 25 %}
            Low
          {% elif states('sensor.sophies_iphone_se_battery_level')|float < 40 %}
            Needs Charging
          {% elif states('sensor.sophies_iphone_se_battery_level')|float < 70 %}
            Good
          {% else %}
            Charged
          {% endif %}

  - platform: template
    sensors:
      closet_window_sensor_1_battery:
        friendly_name: "Closet Window Sensor 1 Battery"
        value_template: >-
          {% if state_attr('zwave.closet_window_1', 'battery_level') == None %}
            Unavailable
          {% elif state_attr('zwave.closet_window_1', 'battery_level')|float < 15 %}
            Very Low
          {% elif state_attr('zwave.closet_window_1', 'battery_level')|float < 25 %}
            Low
          {% elif state_attr('zwave.closet_window_1', 'battery_level')|float < 40 %}
            Medium
          {% elif state_attr('zwave.closet_window_1', 'battery_level')|float < 70 %}
            Good
          {% else %}
            Full
          {% endif %}  

  - platform: template
    sensors:
      back_door_sensor_battery:
        friendly_name: "Back Door Sensor Battery"
        value_template: >-
          {% if state_attr('zwave.back_door', 'battery_level') == None %}
            Unavailable
          {% elif state_attr('zwave.back_door', 'battery_level')|float < 15 %}
            Very Low
          {% elif state_attr('zwave.back_door', 'battery_level')|float < 25 %}
            Low
          {% elif state_attr('zwave.back_door', 'battery_level')|float < 40 %}
            Medium
          {% elif state_attr('zwave.back_door', 'battery_level')|float < 70 %}
            Good
          {% else %}
            Full
          {% endif %}            

  - platform: template
    sensors:
      guest_bedroom_window_1_battery:
        friendly_name: "Guest Bedroom Window 1 Sensor Battery"
        value_template: >-
          {% if state_attr('zwave.guest_bedroom_window_1', 'battery_level') == None %}
            Unavailable
          {% elif  state_attr('zwave.guest_bedroom_window_1', 'battery_level')|float < 15 %}
            Very Low
          {% elif state_attr('zwave.guest_bedroom_window_1', 'battery_level')|float < 25 %}
            Low
          {% elif state_attr('zwave.guest_bedroom_window_1', 'battery_level')|float < 40 %}
            Medium
          {% elif state_attr('zwave.guest_bedroom_window_1', 'battery_level')|float < 70 %}
            Good
          {% else %}
            Full
          {% endif %}            


  - platform: template
    sensors:
      seans_phone_battery:
        friendly_name: "Sean's Phone Battery"
        value_template: >-
          {% if is_state('sensor.sean_battery_state', 'unknown') %}
            Unknown
          {% elif is_state('sensor.sean_battery_level', 'unknown') %}
            Unknown
          {% elif is_state('sensor.sean_battery_state', 'Charging') %}
            Charging
          {% elif states('sensor.sean_battery_level')|float < 15 %}
            Very Low
          {% elif states('sensor.sean_battery_level')|float < 25 %}
            Low
          {% elif states('sensor.sean_battery_level')|float < 40 %}
            Needs Charging
          {% elif states('sensor.sean_battery_level')|float < 70 %}
            Good
          {% else %}
            Charged
          {% endif %}


# First 2 statements are for 04/15/21-11/25/21: Pickup is Even Weeks Monday Morning. Formula is Odd Weeks on Sunday = Today, Odd Weeks on Saturday = Tomorrow. 
# Second 2 statements are for 12/08/21-03/30/22: Pickup is Odd Weeks Thursday Morning. Formula is (hopefully) Odd Weeks on Tuesday = Today, Odd Weeks on Monday = Tomorrow
# Check how closely next years dates compare to this year's and adjust as needed. There was no collection at the end of November. The sensor still goes all the way to the end of november and starts from beginning of December which isn't exactly accurate during the transition.

  - platform: template
    sensors:
      bio_odpad_day:
        friendly_name: "Take Bio Odpad Out"
        value_template: >-
          {% if (now().isocalendar()[1]/2)|round(0) != (now().isocalendar()[1]/2)  
          and now().weekday() in (6,) 
          and now().strftime('%F') <= (now().strftime('%Y') | int ) ~ "-11-30" 
          and now().strftime('%F') >= (now().strftime('%Y') | int ) ~ "-04-01" %}
            Today
          {% elif (now().isocalendar()[1]/2)|round(0) != (now().isocalendar()[1]/2)  
          and now().weekday() in (5,) 
          and now().strftime('%F') <= (now().strftime('%Y') | int ) ~ "-11-30" 
          and now().strftime('%F') >= (now().strftime('%Y') | int ) ~ "-04-01" %}
            Tomorrow
          {% elif (now().isocalendar()[1]/2)|round(0) != (now().isocalendar()[1]/2)  
          and now().weekday() in (2,) 
          and (now().strftime('%F') > (now().strftime('%Y') | int ) ~ "-11-30" 
          or now().strftime('%F') < (now().strftime('%Y') | int ) ~ "-04-01") %}
            Today
          {% elif (now().isocalendar()[1]/2)|round(0) != (now().isocalendar()[1]/2)  
          and now().weekday() in (1,) 
          and (now().strftime('%F') > (now().strftime('%Y') | int ) ~ "-11-30" 
          or now().strftime('%F') < (now().strftime('%Y') | int ) ~ "-04-01") %}
            Tomorrow
          {% else %}
            false
          {% endif %}


#trash day is thursday so take it out today=wednesday, tomorrow=tuesday

  - platform: template
    sensors:
      trash_day:
        friendly_name: "Take Trash Out"
        value_template: >-
          {% if now().weekday() in (2,) %}
            Today
          {% elif now().weekday() in (1,) %}
            Tomorrow
          {% else %}
            false
          {% endif %}
        icon_template: >-
            mdi:trash-can-outline

  - platform: template
    sensors:
      dining_room_temperature:
        friendly_name: "Temperature-Dining Room"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.dining_room', 'current_temperature')|float }}"

      entrance_temperature:
        friendly_name: "Temperature-Entrance"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.entrance', 'current_temperature')|float }}"

      garage_temperature:
        friendly_name: "Temperature-Garage"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.garage', 'current_temperature')|float }}"

      guest_bedroom_temperature:
        friendly_name: "Temperature-Guest Bedroom"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.guest_bedroom', 'current_temperature')|float }}"

      laundry_room_temperature:
        friendly_name: "Temperature-Laundry Room"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.laundry_room', 'current_temperature')|float }}"

      living_room_temperature:
        friendly_name: "Temperature-Living Room"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.living_room', 'current_temperature')|float }}"

      master_bath_temperature:
        friendly_name: "Temperature-Master Bath"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.master_bath', 'current_temperature')|float }}"

      master_bedroom_temperature:
        friendly_name: "Temperature-Master Bedroom"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.master_bedroom', 'current_temperature')|float }}"

      master_closet_temperature:
        friendly_name: "Temperature-Master Closet"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.master_closet', 'current_temperature')|float }}"

      office_library_temperature:
        friendly_name: "Temperature-Office/Libary"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.office_library', 'current_temperature')|float }}"

      sebastian_s_room_temperature:
        friendly_name: "Temperature-Sebastian's Room"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.sebastian_s_room', 'current_temperature')|float }}"

      sophie_s_room_temperature:
        friendly_name: "Temperature-Sophie's Room"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.sophie_s_room', 'current_temperature')|float }}"

      straus_house_temperature:
        friendly_name: "Temperature-Straus House"
        device_class: temperature
        unit_of_measurement: C
        value_template: "{{ state_attr('climate.straus_house', 'current_temperature')|float }}"

  - platform: template
    sensors:
    
      discworld_network_down_mbit:
        friendly_name: "Discworld Network Down Mbit"
        unit_of_measurement: 'Mbit/s'
        value_template: "{{ states('sensor.discworld_network_down')|float / 1024 }}"

      discworld_network_up_mbit:
        friendly_name: "Discworld Network Up Mbit"
        unit_of_measurement: 'Mbit/s'
        value_template: "{{ states('sensor.discworld_network_up')|float / 1024 }}"


  - platform: template
    sensors:
      sebastian_left_window_battery:
        friendly_name: "Sebastian Left Window Battery"
        value_template: >-
          {% if state_attr('zwave.sebastian_room_left_window', 'battery_level') == None %}
            Unavailable
          {% elif state_attr('zwave.sebastian_room_left_window', 'battery_level')|float < 15 %}
            Very Low
          {% elif state_attr('zwave.sebastian_room_left_window', 'battery_level')|float < 25 %}
            Low
          {% elif state_attr('zwave.sebastian_room_left_window', 'battery_level')|float < 40 %}
            Medium
          {% elif state_attr('zwave.sebastian_room_left_window', 'battery_level')|float < 70 %}
            Good
          {% else %}
            Full
          {% endif %} 

  - platform: template
    sensors:
      basement_flood_sensor_battery:
        friendly_name: "Basement flood sensor battery"
        value_template: >-
          {% if state_attr('zwave.basement_flood_sensor', 'battery_level') == None %}
            Unavailable
          {% elif state_attr('zwave.basement_flood_sensor', 'battery_level')|float < 15 %}
            Very Low
          {% elif state_attr('zwave.basement_flood_sensor', 'battery_level')|float < 25 %}
            Low
          {% elif state_attr('zwave.basement_flood_sensor', 'battery_level')|float < 40 %}
            Medium
          {% elif state_attr('zwave.basement_flood_sensor', 'battery_level')|float < 70 %}
            Good
          {% else %}
            Full
          {% endif %} 


  - platform: template
    sensors:
      last_alexa:
        value_template: >
          {{ expand(states.group.alexas) | selectattr('attributes.last_called','eq',True) | map(attribute='entity_id') | first }}

#  - platform: template
#    sensors:
#        last_alexa:
#          entity_id:
#            - media_player.kichen_bar_kindle_fire
#            - media_player.master_closet_kindle
#            - media_player.sean_s_4th_fire 
#            - media_player.sean_s_5th_fire
#            - media_player.sean_s_6th_fire 
#            - media_player.sean_s_echo_dot
#          value_template: >
#            {{ states.media_player | selectattr('attributes.last_called','eq',True) | map(attribute='entity_id') | first }}


  - platform: template
    sensors:
      car_needs_charging:
        friendly_name: "Car Charge"
        value_template: >-
          {% if is_state('device_tracker.cooper_s_e_all4', 'home') and (states('sensor.cooper_s_e_all4_charging_level_hv')|float < 80) and is_state('sensor.cooper_s_e_all4_connectionstatus', 'DISCONNECTED') %} Charge It 
          {% else %} unknown
          {% endif %}

  - platform: template
    sensors:
      low_gas_in_car:
        friendly_name: "Car Fuel"
        value_template: >-
          {% if ((states('sensor.cooper_s_e_all4_remaining_fuel')|float < 5)and (states('sensor.cooper_s_e_all4_remaining_fuel')!='unavailable')and (states('sensor.cooper_s_e_all4_remaining_fuel')!='unknown')) %} Fill It
          {% else %} no
          {% endif %}

  - platform: template
    sensors:
      czech_holiday_friendly_0:
        friendly_name_template: >-
          {{state_attr('sensor.ical_czech_holidays_event_0', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_czech_holidays_event_0', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_czech_holidays_event_0', 'eta') == 1 %}
            Tomorrow
          {% else %}
            in {{state_attr('sensor.ical_czech_holidays_event_0', 'eta')}} days 
          {% endif %}
        attribute_templates:
          eta: >-
            {{state_attr('sensor.ical_czech_holidays_event_0', 'eta')}}
          date: >-
            {{state_attr('sensor.ical_czech_holidays_event_0', 'start').strftime('%a, %b %d')}}
        icon_template: >-
            mdi:calendar

  - platform: template
    sensors:
      czech_holiday_friendly_1:
        friendly_name_template: >-
          {{state_attr('sensor.ical_czech_holidays_event_1', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_czech_holidays_event_1', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_czech_holidays_event_1', 'eta') == 1 %}
            Tomorrow
          {% else %}
            in {{state_attr('sensor.ical_czech_holidays_event_1', 'eta')}} days 
          {% endif %}
        attribute_templates:
          eta: >-
            {{state_attr('sensor.ical_czech_holidays_event_1', 'eta')}}
          date: >-
            {{state_attr('sensor.ical_czech_holidays_event_1', 'start').strftime('%a, %b %d')}} 
        icon_template: >-
            mdi:calendar

  - platform: template
    sensors:
      czech_holiday_friendly_2:
        friendly_name_template: >-
          {{state_attr('sensor.ical_czech_holidays_event_2', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_czech_holidays_event_2', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_czech_holidays_event_2', 'eta') == 1 %}
            Tomorrow
          {% else %}
            in {{state_attr('sensor.ical_czech_holidays_event_2', 'eta')}} days 
          {% endif %}
        attribute_templates:
          eta: >-
            {{state_attr('sensor.ical_czech_holidays_event_2', 'eta')}}
          date: >-
            {{state_attr('sensor.ical_czech_holidays_event_2', 'start').strftime('%a, %b %d')}}       
        icon_template: >-
            mdi:calendar

  - platform: template
    sensors:
      czech_holiday_friendly_3:
        friendly_name_template: >-
          {{state_attr('sensor.ical_czech_holidays_event_3', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_czech_holidays_event_3', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_czech_holidays_event_3', 'eta') == 1 %}
            Tomorrow
          {% else %}
            in {{state_attr('sensor.ical_czech_holidays_event_3', 'eta')}} days 
          {% endif %}
        attribute_templates:
          eta: >-
            {{state_attr('sensor.ical_czech_holidays_event_3', 'eta')}}
          date: >-
            {{state_attr('sensor.ical_czech_holidays_event_3', 'start').strftime('%a, %b %d')}}
        icon_template: >-
            mdi:calendar

  - platform: template
    sensors:
      czech_holiday_friendly_4:
        friendly_name_template: >-
          {{state_attr('sensor.ical_czech_holidays_event_4', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_czech_holidays_event_4', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_czech_holidays_event_4', 'eta') == 1 %}
            Tomorrow
          {% else %}
            in {{state_attr('sensor.ical_czech_holidays_event_4', 'eta')}} days 
          {% endif %}
        attribute_templates:
          eta: >-
            {{state_attr('sensor.ical_czech_holidays_event_4', 'eta')}}
          date: >-
            {{state_attr('sensor.ical_czech_holidays_event_4', 'start').strftime('%a, %b %d')}} 
        icon_template: >-
            mdi:calendar

  - platform: template
    sensors:
      parklane_holiday_friendly_0:
        friendly_name_template: >-
          Parklane {{state_attr('sensor.ical_parklane_calendar_event_0', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_parklane_calendar_event_0', 'eta') < 0 
          and (state_attr('sensor.ical_parklane_calendar_event_0', 'end')-now()).days > 0 %}
            {{(state_attr('sensor.ical_parklane_calendar_event_0', 'end')-now()).days}} days more
          {% elif state_attr('sensor.ical_parklane_calendar_event_0', 'eta')< 0 
          and (state_attr('sensor.ical_parklane_calendar_event_0', 'end')-now()).days == 0 %}
            Last Day
          {% elif state_attr('sensor.ical_parklane_calendar_event_0', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_parklane_calendar_event_0', 'eta') == 1 %}
            Tomorrow
          {% elif state_attr('sensor.ical_parklane_calendar_event_0', 'eta') > 1 %}
            in {{state_attr('sensor.ical_parklane_calendar_event_0', 'eta')}} days
          {% else %}
          {% endif %}
        attribute_templates:
          eta: >-
            {% if 'holiday' in states('sensor.ical_parklane_calendar_event_0') or 'term' in states('sensor.ical_parklane_calendar_event_0') or 'Term' in states('sensor.ical_parklane_calendar_event_0') or 'Holiday' in states('sensor.ical_parklane_calendar_event_0')  %}
              {% if state_attr('sensor.ical_parklane_calendar_event_0', 'eta') >=0 %}
              {{state_attr('sensor.ical_parklane_calendar_event_0', 'eta')}}
              {% elif (state_attr('sensor.ical_parklane_calendar_event_0', 'end')-now()).days>=0 %}
              0
              {% else %}
              -1
              {% endif %}
            {% else %}
            -1
            {% endif %}
          date: >-
            {{state_attr('sensor.ical_parklane_calendar_event_0', 'start').strftime('%a, %b %d')}}
        icon_template: >-
            mdi:calendar

  - platform: template
    sensors:
      parklane_holiday_friendly_1:
        friendly_name_template: >-
          Parklane {{state_attr('sensor.ical_parklane_calendar_event_1', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_parklane_calendar_event_1', 'eta') < 0 
          and (state_attr('sensor.ical_parklane_calendar_event_1', 'end')-now()).days > 0 %}
            {{(state_attr('sensor.ical_parklane_calendar_event_1', 'end')-now()).days}} days more
          {% elif state_attr('sensor.ical_parklane_calendar_event_1', 'eta') < 0 
          and (state_attr('sensor.ical_parklane_calendar_event_1', 'end')-now()).days == 0 %}
            Last Day
          {% elif state_attr('sensor.ical_parklane_calendar_event_1', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_parklane_calendar_event_1', 'eta') == 1 %}
            Tomorrow
          {% elif state_attr('sensor.ical_parklane_calendar_event_1', 'eta') > 1 %}
            in {{state_attr('sensor.ical_parklane_calendar_event_1', 'eta')}} days
          {% else %}
          {% endif %}
        attribute_templates:
          eta: >-
            {% if 'holiday' in states('sensor.ical_parklane_calendar_event_1') or 'term' in states('sensor.ical_parklane_calendar_event_1') or 'Term' in states('sensor.ical_parklane_calendar_event_1') or 'Holiday' in states('sensor.ical_parklane_calendar_event_1')  %}
              {% if state_attr('sensor.ical_parklane_calendar_event_1', 'eta') >=0 %}
              {{state_attr('sensor.ical_parklane_calendar_event_1', 'eta')}}
              {% elif (state_attr('sensor.ical_parklane_calendar_event_1', 'end')-now()).days>=0 %}
              0
              {% else %}
              -1
              {% endif %}
            {% else %}
            -1
            {% endif %}
          date: >-
            {{state_attr('sensor.ical_parklane_calendar_event_1', 'start').strftime('%a, %b %d')}}
        icon_template: >-
            mdi:calendar

  - platform: template
    sensors:
      parklane_holiday_friendly_2:
        friendly_name_template: >-
          Parklane {{state_attr('sensor.ical_parklane_calendar_event_2', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_parklane_calendar_event_2', 'eta') < 0 
          and (state_attr('sensor.ical_parklane_calendar_event_2', 'end')-now()).days > 0 %}
            {{(state_attr('sensor.ical_parklane_calendar_event_2', 'end')-now()).days}} days more
          {% elif state_attr('sensor.ical_parklane_calendar_event_2', 'eta') < 0 
          and (state_attr('sensor.ical_parklane_calendar_event_2', 'end')-now()).days == 0 %}
            Last Day
          {% elif state_attr('sensor.ical_parklane_calendar_event_2', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_parklane_calendar_event_2', 'eta') == 1 %}
            Tomorrow
          {% elif state_attr('sensor.ical_parklane_calendar_event_2', 'eta') > 1 %}
            in {{state_attr('sensor.ical_parklane_calendar_event_2', 'eta')}} days
          {% else %}
          {% endif %}
        attribute_templates:
          eta: >-
            {% if 'holiday' in states('sensor.ical_parklane_calendar_event_2') or 'term' in states('sensor.ical_parklane_calendar_event_2') or 'Term' in states('sensor.ical_parklane_calendar_event_2') or 'Holiday' in states('sensor.ical_parklane_calendar_event_2')  %}
              {% if state_attr('sensor.ical_parklane_calendar_event_2', 'eta') >=0 %}
              {{state_attr('sensor.ical_parklane_calendar_event_2', 'eta')}}
              {% elif (state_attr('sensor.ical_parklane_calendar_event_2', 'end')-now()).days>=0 %}
              0
              {% else %}
              -1
              {% endif %}
            {% else %}
            -1
            {% endif %}
          date: >-
            {{state_attr('sensor.ical_parklane_calendar_event_2', 'start').strftime('%a, %b %d')}}
        icon_template: >-
            mdi:calendar

  - platform: template
    sensors:
      parklane_holiday_friendly_3:
        friendly_name_template: >-
          Parklane {{state_attr('sensor.ical_parklane_calendar_event_3', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_parklane_calendar_event_3', 'eta') < 0 
          and (state_attr('sensor.ical_parklane_calendar_event_3', 'end')-now()).days > 0 %}
            {{(state_attr('sensor.ical_parklane_calendar_event_3', 'end')-now()).days}} days more
          {% elif state_attr('sensor.ical_parklane_calendar_event_3', 'eta') < 0 
          and (state_attr('sensor.ical_parklane_calendar_event_3', 'end')-now()).days == 0 %}
            Last Day
          {% elif state_attr('sensor.ical_parklane_calendar_event_3', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_parklane_calendar_event_3', 'eta') == 1 %}
            Tomorrow
          {% elif state_attr('sensor.ical_parklane_calendar_event_3', 'eta') > 1 %}
            in {{state_attr('sensor.ical_parklane_calendar_event_3', 'eta')}} days
          {% else %}
          {% endif %}
        attribute_templates:
          eta: >-
            {% if 'holiday' in states('sensor.ical_parklane_calendar_event_3') or 'term' in states('sensor.ical_parklane_calendar_event_3') or 'Term' in states('sensor.ical_parklane_calendar_event_3') or 'Holiday' in states('sensor.ical_parklane_calendar_event_3')  %}
              {% if state_attr('sensor.ical_parklane_calendar_event_3', 'eta') >=0 %}
              {{state_attr('sensor.ical_parklane_calendar_event_3', 'eta')}}
              {% elif (state_attr('sensor.ical_parklane_calendar_event_3', 'end')-now()).days>=0 %}
              0
              {% else %}
              -1
              {% endif %}
            {% else %}
            -1
            {% endif %}
          date: >-
            {{state_attr('sensor.ical_parklane_calendar_event_3', 'start').strftime('%a, %b %d')}}
        icon_template: >-
            mdi:calendar

  - platform: template
    sensors:
      parklane_holiday_friendly_4:
        friendly_name_template: >-
          Parklane {{state_attr('sensor.ical_parklane_calendar_event_4', 'friendly_name')}}
        value_template: >-
          {% if state_attr('sensor.ical_parklane_calendar_event_4', 'eta') < 0 
          and (state_attr('sensor.ical_parklane_calendar_event_4', 'end')-now()).days > 0 %}
            {{(state_attr('sensor.ical_parklane_calendar_event_4', 'end')-now()).days}} days more
          {% elif state_attr('sensor.ical_parklane_calendar_event_4', 'eta') < 0 
          and (state_attr('sensor.ical_parklane_calendar_event_4', 'end')-now()).days == 0 %}
            Last Day
          {% elif state_attr('sensor.ical_parklane_calendar_event_4', 'eta') == 0 %}
            Today
          {% elif state_attr('sensor.ical_parklane_calendar_event_4', 'eta') == 1 %}
            Tomorrow
          {% elif state_attr('sensor.ical_parklane_calendar_event_4', 'eta') > 1 %}
            in {{state_attr('sensor.ical_parklane_calendar_event_4', 'eta')}} days
          {% else %}
          {% endif %}
        attribute_templates:
          eta: >-
            {% if 'holiday' in states('sensor.ical_parklane_calendar_event_4') or 'term' in states('sensor.ical_parklane_calendar_event_4') or 'Term' in states('sensor.ical_parklane_calendar_event_4') or 'Holiday' in states('sensor.ical_parklane_calendar_event_4')  %}
              {% if state_attr('sensor.ical_parklane_calendar_event_4', 'eta') >=0 %}
              {{state_attr('sensor.ical_parklane_calendar_event_4', 'eta')}}
              {% elif (state_attr('sensor.ical_parklane_calendar_event_4', 'end')-now()).days>=0 %}
              0
              {% else %}
              -1
              {% endif %}
            {% else %}
            -1
            {% endif %}
          date: >-
            {{state_attr('sensor.ical_parklane_calendar_event_4', 'start').strftime('%a, %b %d')}}
        icon_template: >-
            mdi:calendar
#
#
#  - platform: template
#    sensors:
#      back_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["back"]["fps"] }}'
#        unit_of_measurement: 'FPS'
#      back_skipped_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["back"]["skipped_fps"] }}'
#        unit_of_measurement: 'FPS'
#      back_detection_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["back"]["detection_fps"] }}'
#        unit_of_measurement: 'FPS'
#      front_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["front"]["fps"] }}'
#        unit_of_measurement: 'FPS'
#      front_skipped_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["front"]["skipped_fps"] }}'
#        unit_of_measurement: 'FPS'
#      front_detection_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["front"]["detection_fps"] }}'
#        unit_of_measurement: 'FPS'
#      left_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["left"]["fps"] }}'
#        unit_of_measurement: 'FPS'
#      left_skipped_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["left"]["skipped_fps"] }}'
#        unit_of_measurement: 'FPS'
#      left_detection_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["left"]["detection_fps"] }}'
#        unit_of_measurement: 'FPS'
#      right_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["right"]["fps"] }}'
#        unit_of_measurement: 'FPS'
#      right_skipped_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["right"]["skipped_fps"] }}'
#        unit_of_measurement: 'FPS'
#      right_detection_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["right"]["detection_fps"] }}'
#        unit_of_measurement: 'FPS'
#      frigate_detection_fps: 
#        value_template: '{{ states.sensor.frigate_debug.attributes["detection_fps"] }}'
#        unit_of_measurement: 'FPS'
#      frigate_coral_inference:
#        value_template: '{{ states.sensor.frigate_debug.attributes["detectors"]["coral"]["inference_speed"] }}' 
#        unit_of_measurement: 'ms'

  - platform: template
    sensors:
      narnia_ssd_raid_status:
        friendly_name: "SSD RAID Status"
        value_template: >-    
          {% if "[U_]" in states('sensor.narnia_ssd_mdstat')%}
          Degraded (Disk 2)
          {% elif "[_U]" in states('sensor.narnia_ssd_mdstat')%}
          Degraded (Disk 1)
          {% elif "[UU]" in states('sensor.narnia_ssd_mdstat') %}
          Healthy
          {% else %}
          Unknown
          {% endif %}
        icon_template: >-
          {% if "[U_]" in states('sensor.narnia_ssd_mdstat')%}
          mdi:harddisk-remove
          {% elif "[_U]" in states('sensor.narnia_ssd_mdstat')%}
          mdi:harddisk-remove
          {% elif "[UU]" in states('sensor.narnia_ssd_mdstat') %}
          mdi:harddisk
          {% else %}
          help-network
          {% endif %}  

  - platform: template
    sensors:
      narnia_hdd_raid_status:
        friendly_name: "HDD RAID Status"
        value_template: >-    
          {% if "U_" in states('sensor.narnia_hdd_mdstat')%}
          Degraded
          {% elif "_U" in states('sensor.narnia_hdd_mdstat')%}
          Degraded
          {% elif "[UUU]" in states('sensor.narnia_hdd_mdstat') %}
          Healthy
          {% else %}
          Unknown
          {% endif %}
        icon_template: >-
          {% if "U_" in states('sensor.narnia_hdd_mdstat')%}
          mdi:harddisk-remove
          {% elif "_U" in states('sensor.narnia_hdd_mdstat')%}
          mdi:harddisk-remove
          {% elif "[UUU]" in states('sensor.narnia_hdd_mdstat') %}
          mdi:harddisk
          {% else %}
          help-network
          {% endif %}          

  - platform: template
    sensors:
      trash_display:
        friendly_name: "Trash"
        value_template: >-
          {% if is_state('input_boolean.trash_needs_taking_out', 'on') and is_state('sensor.trash_day','Today')  and ((now().strftime('%H')|int) > 17) and ((now().strftime('%H')|int) < 25) %}
          !Now!
          {% elif is_state('input_boolean.trash_needs_taking_out', 'on') and is_state('sensor.trash_day','Today')  and ((now().strftime('%H')|int) <= 17) %}   
          Today
          {% elif
          is_state('input_boolean.trash_needs_taking_out', 'on') and is_state('sensor.trash_day','Tomorrow') %} 
          Tomorrow
          {% else %}
          off
          {% endif %}
        icon_template: >-
          mdi:trash-can-outline

  - platform: template
    sensors:
      time_formatted:
        friendly_name: "Date and time"
        value_template: "{{ as_timestamp(states('sensor.date_time_iso')) | timestamp_custom('%a, %b %e  %R') }}"
        icon_template: mdi:calendar-clock
 


  - platform: template
    sensors:
      kite_day:
        friendly_name: "Kite Day"
        value_template: >-
          {% if states('sensor.weatherflow_air_temperature')|float < 27
              and states('sensor.weatherflow_air_temperature')|float > 10 
              and states('sensor.tempest_st_00023475_wind_speed')|float < 30
              and states('sensor.tempest_st_00023475_wind_speed')|float > 7
              and (states('sensor.pirateweather_precip_probability_0d')|float < 30
              or ((states('sensor.pirateweather_precip_intensity_1h')|float < 0.05)
              and (states('sensor.pirateweather_precip_intensity_2h')|float < 0.05)
              and (states('sensor.pirateweather_precip_intensity_3h')|float < 0.05))) %}
            yes
          {% else %}
            no
          {% endif %}
        icon_template: mdi:kite 

  - platform: template
    sensors:
      bathroom_humidity_change_rate:
        friendly_name: "Bathroom Humidity Change Rate"
        unit_of_measurement: 'rate'
        value_template: "{{ states.sensor.bathroom_humidity_stats.attributes.change_rate }}"
      bathroom_humidity_standard_deviation:
        friendly_name: "Bathroom Humidity Standard Deviation"
        unit_of_measurement: '%'
        value_template: "{{ states.sensor.bathroom_humidity_stats.attributes.standard_deviation }}"
      bathroom_humidity_variance:
        friendly_name: "Bathroom Humidity Variance"
        unit_of_measurement: '%'
        value_template: "{{ states.sensor.bathroom_humidity_stats.attributes.variance }}"
      bathroom_humidity_change:
        friendly_name: "Bathroom Humidity Change"
        unit_of_measurement: '%'
        value_template: "{{ states.sensor.bathroom_humidity_stats.attributes.change }}"
      bathroom_humidity_average_change:
        friendly_name: "Bathroom Humidity Average Change"
        unit_of_measurement: '%'
        value_template: "{{ states.sensor.bathroom_humidity_stats.attributes.average_change }}"
      bathroom_humidity_mean:
        friendly_name: "Bathroom Humidity Mean"
        unit_of_measurement: '%'
        value_template: "{{ states.sensor.bathroom_humidity_stats.attributes.mean}}"
      bathroom_humidity_median:
        friendly_name: "Bathroom Humidity Median"
        unit_of_measurement: '%'
        value_template: "{{ states.sensor.bathroom_humidity_stats.attributes.median }}" 
      bathroom_humidity_min_value:
        friendly_name: "Bathroom Humidity Min Value"
        unit_of_measurement: '%'
        value_template: "{{ states.sensor.bathroom_humidity_stats.attributes.min_value}}"
      bathroom_humidity_max_value:
        friendly_name: "Bathroom Humidity Max Value"
        unit_of_measurement: '%'
        value_template: "{{ states.sensor.bathroom_humidity_stats.attributes.max_value }}"
 
  - platform: template
    sensors:
      rain_sensor:
        friendly_name: "It's Raining"
        value_template: >-
          {% if ((((as_timestamp(now()) - as_timestamp(states.binary_sensor.weatherflow_is_raining.last_changed)) > 300) or ((as_timestamp(now()) - as_timestamp(states('sensor.uptime')))<300)) and (states('binary_sensor.weatherflow_is_raining')=='off')) %}
            no
          {% else %}
            {% if ((states('sensor.tempest_st_00023475_rain_rate'))|float < 0.2) %}
              Drizzle
            {% elif (states('sensor.tempest_st_00023475_rain_rate'))|float < 0.5 %}           
              Slight Rain
            {% elif (states('sensor.tempest_st_00023475_rain_rate'))|float < 4.0 %}           
              Moderate Rain
            {% elif (states('sensor.tempest_st_00023475_rain_rate'))|float < 8.0 %}           
              Heavy Rain
            {% elif (states('sensor.tempest_st_00023475_rain_rate'))|float < 20.0 %}           
              Heavy Shower
            {% elif (states('sensor.tempest_st_00023475_rain_rate'))|float < 50.0 %}           
              Very Heavy Shower
            {% else %}           
              Violent Shower
            {% endif %}
          {% endif %} 
        icon_template: >-
          {% if ((as_timestamp(now()) - as_timestamp(states.binary_sensor.weatherflow_is_raining.last_changed)) > 300) and (states('binary_sensor.weatherflow_is_raining')=='off') %}
            mdi:weather-sunny
          {% else %}
            {% if (states('sensor.tempest_st_00023475_rain_rate'))|float < 0.2 %}
              mdi:weather-partly-rainy
            {% elif (states('sensor.tempest_st_00023475_rain_rate'))|float < 0.5 %}           
              mdi:weather-partly-rainy
            {% elif (states('sensor.tempest_st_00023475_rain_rate'))|float < 4.0 %}           
              mdi:weather-rainy
            {% elif (states('sensor.tempest_st_00023475_rain_rate'))|float < 8.0 %}           
              mdi:weather-pouring
            {% elif (states('sensor.tempest_st_00023475_rain_rate'))|float < 50.0 %}           
              mdi:weather-pouring
            {% else %}           
              mdi:weather-pouring
            {% endif %}
          {% endif %} 


  - platform: template
    sensors:
      high_wind_warning:
        friendly_name: "It's Windy"
        icon_template: >-
          mdi:weather-windy
        value_template: >-
          {% if (states('timer.dangerous_wind_timer')=='active')%}
            Dangerous
          {% elif (states('timer.very_high_wind_timer')=='active')%}
            Very High
          {% elif (states('timer.high_wind_timer')=='active')%}
            High
          {% elif (states('timer.medium_wind_timer')=='active')%}
            Moderate
          {% else %}
            no          
          {% endif %}


  - platform: template
    sensors:
      last_lightning:
        friendly_name: "Lightning"
        value_template: >-
          {% if (states('timer.lightning_keepalive')=='active') and ((states('sensor.weatherflow_lightning_strike_count_last_hour')|float) > 0) and ((states('sensor.weatherflow_last_lightning_strike_distance')|float)<20) %}
            {{ states('sensor.weatherflow_last_lightning_strike_distance') }}km,{{((as_timestamp(now())-as_timestamp(states('sensor.weatherflow_last_lightning_strike')))/60)|int}}m
          {% elif (states('timer.lightning_keepalive')=='active') and ((states('sensor.weatherflow_lightning_strike_count_last_hour')|float) > 0) %}
            {{ states('input_text.last_close_lightning_distance') }}km,{{((as_timestamp(now())-as_timestamp(states('input_text.last_close_lightning_time')))/60)|int}}m
          {% else %}
            no
          {% endif %}
        icon_template: mdi:flash  


  - platform: template
    sensors:
      mini_cooper_s_problem:
        friendly_name: "Problem"
        icon_template: >-
          mdi:alert
        value_template: >-
          {% if states('binary_sensor.cooper_s_e_all4_check_control_messages')=='off'%}
            off
          {% else %}
            {{state_attr('binary_sensor.cooper_s_e_all4_check_control_messages', 'check_control_messages')}}
          {% endif %}

# very simplified formula is (projected deaths next week based on this week's cases*ratio of cases this week over last week*52 weeks in year/107.4 hundreds of thousands of people in czechia)
# simlified formula is (death ratio last week*ratio of cases last week to this week*cases this week*52 weeks in year/107.4 hundreds of thousands of people in czechia )
# real formula is ((((deaths this week/cases last week)*(cases this week/last week)*cases this week)*52)/107.4 hundreds of thousands of people in czechia )
  - platform: template
    sensors:
      czechia_current_annual_death_rate_per_100k:
        friendly_name: "Czechia Annual Covid Death Rate Per 100k"
        icon_template: >-
          mdi:virus
        unit_of_measurement: "Annual Death Rate/100k"
        value_template: >-
          {{ 
          ((((state_attr('sensor.czechia_coronavirus_total_deaths', 'history_1_day')|int)-
          (state_attr('sensor.czechia_coronavirus_total_deaths', 'history_8_day')|int))/
          ((state_attr('sensor.czechia_coronavirus_new_backup', 'history_8_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_9_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_10_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_11_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_12_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_13_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_14_day')|int))*
          (((state_attr('sensor.czechia_coronavirus_new_backup', 'history_1_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_2_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_3_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_4_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_5_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_6_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_7_day')|int))/
          ((state_attr('sensor.czechia_coronavirus_new_backup', 'history_8_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_9_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_10_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_11_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_12_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_13_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_14_day')|int)))*
          (((state_attr('sensor.czechia_coronavirus_new_backup', 'history_1_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_2_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_3_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_4_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_5_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_6_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_7_day')|int))))*52)/107.42625
          }}

  - platform: template
    sensors:
      czechia_deaths_this_week:
        friendly_name: "Czechia Covid Deaths This Week"
        icon_template: >-
          mdi:virus
        value_template: >-
          {{ 
          ((state_attr('sensor.czechia_coronavirus_total_deaths', 'history_1_day')|int)-
          (state_attr('sensor.czechia_coronavirus_total_deaths', 'history_8_day')|int))
          }}

  - platform: template
    sensors:
      czechia_cases_last_week:
        friendly_name: "Czechia Covid Cases Last Week"
        icon_template: >-
          mdi:virus
        value_template: >-
          {{ 
          ((state_attr('sensor.czechia_coronavirus_new_backup', 'history_8_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_9_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_10_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_11_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_12_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_13_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_14_day')|int))
          }}

  - platform: template
    sensors:
      czechia_cases_this_week:
        friendly_name: "Czechia Covid Cases This Week"
        icon_template: >-
          mdi:virus
        value_template: >-
          {{ 
          ((state_attr('sensor.czechia_coronavirus_new_backup', 'history_1_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_2_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_3_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_4_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_5_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_6_day')|int)+
          (state_attr('sensor.czechia_coronavirus_new_backup', 'history_7_day')|int))
          }}
       
       
  - platform: template
    sensors:
      weatherflow_forecast_0:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').0.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').0.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').0.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_0:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').0.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').0.precipitation | float(0) + state_attr('weather.weatherflow_hourly_based_forecast','forecast').1.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_1:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').2.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').2.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').2.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_1:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').2.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').2.precipitation | float(0)  + state_attr('weather.weatherflow_hourly_based_forecast','forecast').3.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_2:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').4.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').4.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').4.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_2:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').4.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').4.precipitation | float(0)  + state_attr('weather.weatherflow_hourly_based_forecast','forecast').5.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_3:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').6.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').6.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').6.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_3:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').6.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').6.precipitation | float(0)  + state_attr('weather.weatherflow_hourly_based_forecast','forecast').7.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_4:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').8.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').8.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').8.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_4:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').8.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').8.precipitation | float(0) + state_attr('weather.weatherflow_hourly_based_forecast','forecast').9.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_5:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').10.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').10.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').10.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_5:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').10.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').10.precipitation | float(0)  + state_attr('weather.weatherflow_hourly_based_forecast','forecast').11.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_6:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').12.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').12.temperature |int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').12.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_6:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').12.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').12.precipitation | float(0)  + state_attr('weather.weatherflow_hourly_based_forecast','forecast').13.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_7:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').14.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').14.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').14.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_7:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').14.precipitation_probability }}%" 
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').14.precipitation | float(0)  + state_attr('weather.weatherflow_hourly_based_forecast','forecast').15.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_8:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').16.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').16.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').16.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_8:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').16.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').16.precipitation | float(0)  + state_attr('weather.weatherflow_hourly_based_forecast','forecast').17.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_9:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').18.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
  #      unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').18.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').18.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_9:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').18.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').18.precipitation | float(0)  + state_attr('weather.weatherflow_hourly_based_forecast','forecast').19.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_10:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').20.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').20.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').20.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_10:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').20.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').20.precipitation | float(0) + state_attr('weather.weatherflow_hourly_based_forecast','forecast').21.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}

     
      weatherflow_forecast_11:
        friendly_name: >-
          {% set time =  state_attr('weather.weatherflow_hourly_based_forecast','forecast').22.datetime | as_datetime | as_local | default(0,true) %}
          {{ time | as_timestamp | timestamp_custom('%-I%p') | replace('M','') | lower }}
        unit_of_measurement: °
        value_template: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').22.temperature|int}}"
        icon_template: >
          {% set array = { 'clear-night':'night',
                            'cloudy':'cloudy',
                            'exceptional':'sunny',
                            'fog':'fog',
                            'hail':'hail',
                            'lightning':'lightning',
                            'lightning-rainy':'lightning-rainy',
                            'partlycloudy':'partly-cloudy',
                            'rainy':'rainy',
                            'snowy':'snowy',
                            'snowy-rainy':'snowy-rainy',
                            'sunny':'sunny',
                            'windy':'windy' } %}
          {% set icon = array[state_attr('weather.weatherflow_hourly_based_forecast','forecast').22.condition] %}
          mdi:weather-{{ icon }}


      weatherflow_forecast_precip_11:
        friendly_name: "{{ state_attr('weather.weatherflow_hourly_based_forecast','forecast').22.precipitation_probability }}%"
        value_template: >-
          {% set amt = state_attr('weather.weatherflow_hourly_based_forecast','forecast').22.precipitation | float(0)  + state_attr('weather.weatherflow_hourly_based_forecast','forecast').23.precipitation | float(0) %}
          {% set amt = (amt * 100) | int(0) %}
          {% if amt > 0 %}
            {% if amt < 100 %}.{{amt}}
            {% else %}{{ amt / 100 }}
            {% endif %}
          {% else %}0
          {% endif %}
          
          
  - platform: template
    sensors:
      next_sunrise:
        friendly_name: "next_sunrise"
        value_template: >
          {{ as_timestamp(state_attr('sun.sun', 'next_rising')) | timestamp_custom('%H:%M') }}

      next_sunset:
        friendly_name: "next_sunset"
        value_template: >
          {{ as_timestamp(state_attr('sun.sun', 'next_setting')) | timestamp_custom('%H:%M') }}
