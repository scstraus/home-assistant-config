- id: bike_day
  alias: 'Bike Day'
  initial_state: 'true'
  trigger:
    platform: time
    at: '11:00:00'
  condition:
    - condition: and
      conditions:
        - condition: state
          entity_id: 'sensor.bike_day'
          state: 'yes'
        - condition: template
          value_template: "{{ not is_state('sensor.sean_location', 'Traveling') }}"
        - condition: time
          weekday:
            - mon
            - tue
            - wed
            - thu
            - fri
  action:
    service: notify.mobile_app_sean_iphone_14
    data:
      title: "Bike Day"
      message: "It's a good day to ride your bike to work today!"
      data:
        push:
          category: weather
          thread-id: "info" 
        entity_id: weather.openweathermap
        
      
- id: posta_state_change
  alias: 'Posta state change'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.cp_packages_coming_today
  condition:
    condition: state
    entity_id: 'sensor.cp_packages_coming_today'
    state: 'Delivery'
  action:
    service: variable.set_variable
    data:
      variable: posta_variable
      attributes: >
        {
          "from": "{{ state_attr('sensor.cp_packages_coming_today', 'from') }}",
          "date": "{{ state_attr('sensor.cp_packages_coming_today', 'date') }}",
          "subject": "{{ state_attr('sensor.cp_packages_coming_today', 'subject') }}"
        }
      value: >
        {{ states('sensor.cp_packages_coming_today')}}
      # attributes_template: >

#,
#          "body": "{{ state_attr('sensor.cp_packages_coming_today', 'body') }}"
#        } 

- id: posta_variable_reset
  alias: 'Posta Variable Reset'
  initial_state: 'true'
  trigger:
    platform: time
    at: '00:00:01'
  action:
    service: variable.set_variable
    data:
      variable: posta_variable
      value: no_delivery
      attributes:
        from: ''
        date: ''
        subject: ''
        body: ''
        icon: mdi:truck-delivery

- id: dpd_state_change
  alias: 'DPD state change'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.dpd_packages_coming_today
  condition:
    condition: state
    entity_id: 'sensor.dpd_packages_coming_today'
    state: 'Delivery'
  action:
    service: variable.set_variable
    data:
      variable: dpd_variable
      attributes: >
        {
          "from": "{{ state_attr('sensor.dpd_packages_coming_today', 'from') }}",
          "date": "{{ state_attr('sensor.dpd_packages_coming_today', 'date') }}",
          "subject": "{{ state_attr('sensor.dpd_packages_coming_today', 'subject') }}"
        } 
      value: "{{ states('sensor.dpd_packages_coming_today')}}"
      # attributes_template: >





    # service: variable.set_variable
    # data:
    #   variable: dpd_variable
    #   attributes_template: >
    #     {
    #       "from": "{{ state_attr('sensor.dpd_packages_coming_today', 'from') }}",
    #       "date": "{{ state_attr('sensor.dpd_packages_coming_today', 'date') }}",
    #       "subject": "{{ state_attr('sensor.dpd_packages_coming_today', 'subject') }}"
    #     } 
    # data_template:
    #   value: >
    #     {{ states('sensor.dpd_packages_coming_today')}}

#,
#          "body": "{{ state_attr('sensor.dpd_packages_coming_today', 'body') }}"


- id: dpd_variable_reset
  alias: 'DPD Variable Reset'
  initial_state: 'true'
  trigger:
    platform: time
    at: '00:00:01'
  action:
    service: variable.set_variable
    data:
      variable: dpd_variable
      value: no_delivery
      attributes:
        from: ''
        date: ''
        subject: ''
        body: ''
        icon: mdi:truck-delivery

- id: dhl_state_change
  alias: 'DHL state change'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.dhl_packages_coming_today
  condition:
    condition: state
    entity_id: 'sensor.dhl_packages_coming_today'
    state: 'Delivery'
  action:
    service: variable.set_variable
    data:
      variable: dhl_variable 
      attributes: >
        {
          "from": "{{ state_attr('sensor.dhl_packages_coming_today', 'from') }}",
          "date": "{{ state_attr('sensor.dhl_packages_coming_today', 'date') }}",
          "subject": "{{ state_attr('sensor.dhl_packages_coming_today', 'subject') }}"
        } 
      value: "{{ states('sensor.dhl_packages_coming_today')}}"
      # attributes_template: >




    # service: variable.set_variable
    # data:
    #   variable: dhl_variable   
    #   attributes_template: >
    #     {
    #       "from": "{{ state_attr('sensor.dhl_packages_coming_today', 'from') }}",
    #       "date": "{{ state_attr('sensor.dhl_packages_coming_today', 'date') }}",
    #       "subject": "{{ state_attr('sensor.dhl_packages_coming_today', 'subject') }}"
    #     } 
    # data_template:
    #   value: >
    #     {{ states('sensor.dhl_packages_coming_today')}}


 #,
#          "body": "{{ state_attr('sensor.dhl_packages_coming_today', 'body') }}"

        
- id: dhl_variable_reset
  alias: 'DHL Variable Reset'
  initial_state: 'true'
  trigger:
    platform: time
    at: '00:00:01'
  action:
    service: variable.set_variable
    data:
      variable: dhl_variable
      value: no_delivery
      attributes:
        from: ''
        date: ''
        subject: ''
        body: ''
        icon: mdi:truck-delivery

- id: gls_state_change
  alias: 'GLS state change'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.gls_packages_coming_today
  condition:
    condition: state
    entity_id: 'sensor.gls_packages_coming_today'
    state: 'Delivery'
  action:
    service: variable.set_variable
    data:
      variable: gls_variable 
      attributes: >
        {
          "from": "{{ state_attr('sensor.gls_packages_coming_today', 'from') }}",
          "date": "{{ state_attr('sensor.gls_packages_coming_today', 'date') }}",
          "subject": "{{ state_attr('sensor.gls_packages_coming_today', 'subject') }}"
        } 
      value: "{{ states('sensor.gls_packages_coming_today')}}"
      # attributes_template: >


    # service: variable.set_variable
    # data:
    #   variable: gls_variable
    #   attributes_template: >
    #     {
    #       "from": "{{ state_attr('sensor.gls_packages_coming_today', 'from') }}",
    #       "date": "{{ state_attr('sensor.gls_packages_coming_today', 'date') }}",
    #       "subject": "{{ state_attr('sensor.gls_packages_coming_today', 'subject') }}"
    #     }
    # data_template:
    #   value: >
    #     {{ states('sensor.gls_packages_coming_today')}}

#,
#          "body": "{{ state_attr('sensor.gls_packages_coming_today', 'body') }}"

- id: gls_variable_reset
  alias: 'GLS Variable Reset'
  initial_state: 'true'
  trigger:
    platform: time
    at: '00:00:01'
  action:
    service: variable.set_variable
    data:
      variable: gls_variable
      value: no_delivery
      attributes:
        from: ''
        date: ''
        subject: ''
        body: ''
        icon: mdi:truck-delivery

- id: power_out
  alias: 'Power is out'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.house_electricity
    to: 'power_out'
  action:
    service: notify.whole_family
    data:
      title: "Power is Out at Home"
      message: "There's been a power cut at home. Electricity is now off"
      data:
        push:
          thread-id: "error"

- id: power_restored
  alias: 'Power is restored'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.house_electricity
    to: 'power_on'
  action:
    service: notify.whole_family
    data:
      title: "Power Restored at Home"
      message: "Electricity has been powered back on at home"
      data:
        push:
          thread-id: "location"

- id: moldy_conditions
  alias: 'Moldy Conditions'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.popp_unknown_type_0004_id_0014_sensor
    to: 'on'
  action:
    service: notify.sean_alena
    data:
      title: "Mold Detector"
      message: "There are conditions for mold formation under the sink right now"
      data:
        push:
          thread-id: "error"  
   
- id: internet_upload_limited
  alias: 'Internet Upload is Limited'   
  trigger:
    platform: numeric_state
    entity_id: sensor.speedtest_upload
    below: 0.25
  action:
    service: notify.mobile_app_sean_iphone_14
    data:
      title: "Internet is Severely Limited"
      message: "The upload speed of the internet is below 250kbit"
      data:
        push:
          thread-id: "error"
  
- id: internet_upload_normal
  alias: 'Internet Upload is Normal' 
  trigger:
    platform: numeric_state
    entity_id: sensor.speedtest_upload
    above: 1
  action:
    service: notify.mobile_app_sean_iphone_14
    data:
      title: "Internet is Normal"
      message: "The upload speed of the internet is above 1 mbit"
      data:
        push:
          thread-id: "error" 

- id: sophie_up_late
  alias: 'Sophie up late'
  initial_state: 'true'
  mode: single
  trigger:
    - platform: state
      entity_id: binary_sensor.sophies_room_zone_10
      to: 'on'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
          - condition: time
            after: '22:30:00'
            before: '5:00:00'
          - condition: template
            value_template: "{{ not is_state('device_tracker.seans_iphone_14', 'Traveling') }}"
          - condition: templatealenas_iphone
            value_template: "{{ now().strftime('%m')|int > 6 or now().strftime('%m')|int < 9 }}"
      - condition: and
        conditions:
          - condition: time
            after: '21:30:00'
            before: '5:00:00'
          - condition: template
            value_template: "{{ not is_state('device_tracker.seans_iphone_14', 'Traveling') }}"
          - condition: template
            value_template: "{{ now().strftime('%m')|int > 8 or now().strftime('%m')|int < 7 }}"
  action:
    - service: notify.mobile_app_sean_iphone_14
      data:
        title: "Sophie is Up Late"
        message: "Sophie is Up Late"
        data:
          push:
            thread-id: "info"
    - delay:
        seconds: 30

#          - condition: time
#            after: '21:30:00'
#            before: '5:00:00'
#          - condition: template
#            value_template: "{{ not is_state('device_tracker.seans_iphone_14', 'Traveling') }}"
#          - condition: template
#            value_template: "{{ now().strftime('%m')|int = 8 or now().strftime('%m')|int = 7 }}"

#
#- id: 'update_airvisualnode_home_data'
#  alias: 'Update AirVisual node home data'
#  trigger:
#    minutes: '/5'
#    platform: time_pattern
#  action:
#  - service: shell_command.update_avnodehome_data
#  initial_state: 'on'
#
#- id: 'update_airvisualnode_hlubocepy_data'
#  alias: 'Update AirVisual node Hlubocepy data'
#  trigger:
#    minutes: '/5'
#    platform: time_pattern
#  action:
#  - service: shell_command.update_avnodehlubocepy_data
#  initial_state: 'on'

#- alias: Turn off sophie up late in summer
#  initial_state: 'on'
#  trigger:
#    - platform: homeassistant
#      event: start
#  condition:
#    condition: template
#    value_template: >
#      {{ now().strftime('%m')|int <= 8 and
#         now().strftime('%m')|int >= 7 }}
#  action:
#    - delay: '00:02:00'
#    - service: automation.turn_off
#      entity_id:
#        - automation.sophie_up_late

- id: update_morning_commute_sensor
  alias: "Update morning commute sensor"
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      seconds: 17
  condition:
    - condition: time
      after: '10:00:00'
      before: '13:00:00'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: homeassistant.update_entity
      entity_id: sensor.transport_time_to_work


- id: basement_flooding
  alias: 'Basement Flooding'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.basement_is_flooding
      to: 'on'
    - platform: state
      entity_id: binary_sensor.basement_flood_sensor
      to: 'on'
  action:
    - service: notify.sean_alena
      data:
        title: "Basement Flooding"
        message: "The basement is flooding"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "error"
    - data:
        data:
          type: tts
        message: "Attention! The basement is flooding! Attention! The basement is flooding!"
      service: notify.alexa_media_alexa_echo_dot_kitchen_bar
    - data:
        data:
          type: tts
        message: "Attention! The basement is flooding! Attention! The basement is flooding!"
      service: notify.alexa_media_alexa_master_closet
    - data:
        data:
          type: tts
        message: "Attention! The basement is flooding! Attention! The basement is flooding!"
      service: notify.alexa_media_alexa_garage
    - data:
        data:
          type: tts
        message: "Attention! The basement is flooding! Attention! The basement is flooding!"
      service: notify.alexa_media_alexa_master_bath
    - data:
        data:
          type: tts
        message: "Attention! The basement is flooding! Attention! The basement is flooding!"
      service: alexa_media_echo_flex_first_floor_bathroom
    - data:
        data:
          type: tts
        message: "Attention! The basement is flooding! Attention! The basement is flooding!"
      service: alexa_media_echo_flex_first_floor_bathroom

- id: automatic_theme_change
  alias: Automatic Theme Change
  initial_state: 'true'
  trigger:
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sun.sun
      to: above_horizon
    - platform: sun
      event: sunset
      offset: "+00:30:00"
  action:
    - service: frontend.set_theme
      data:
        name: >
          {% if states.sun.sun.state == "above_horizon" %}
            Google Light Theme
          {% else %}
            midnight
          {% endif %}

        # name: >
        #   {% if states.sun.sun.state == "above_horizon" %}
        #     clear
        #   {% else %}
        #     clear-dark
        #   {% endif %}

- id: backup_snapshots_to_dropbox_nightly
  alias: "Nightly Backup of Snapshots to Dropbox"
  initial_state: 'true'
  trigger:
    platform: time
    at: '4:00:00'
  action:
  - service: hassio.addon_stdin
    data: 
      addon: "7be23ff5_dropbox_sync"
      input: 
        command: "upload"

- id: state_holiday_1_week
  alias: 'Notify - 1 Week to State Holiday'
  initial_state: 'true'
  trigger:
    platform: time
    at: '15:00:00'
  condition:
    condition: template
    value_template: '{{ state_attr("sensor.ical_czech_holidays_event_0", "eta") == 7 }}'
  action:
    service: notify.mobile_app_sean_iphone_14
    data:
      title: "State Holiday Coming Up"
      message: "In one week, it is {{ states('sensor.ical_czech_holidays_event_0')}}"
      data:
        push:
          thread-id: "info"

- id: state_holiday_tomorrow
  alias: 'Notify - 1 Day to State Holiday'
  initial_state: 'true'
  trigger:
    platform: time
    at: '15:00:00'
  condition:
    condition: template
    value_template: '{{ state_attr("sensor.ical_czech_holidays_event_0", "eta") == 1 }}'
  action:
    service: notify.mobile_app_sean_iphone_14
    data:
      title: "State Holiday Coming Up"
      message: "Tomorrow it is {{ states('sensor.ical_czech_holidays_event_0')}}"
      data:
        push:
          thread-id: "info"

- id: state_holiday_today
  alias: 'Notify - Today is State Holiday'
  initial_state: 'true'
  trigger:
    platform: time
    at: '10:45:00'
  condition:
    condition: template
    value_template: '{{ state_attr("sensor.ical_czech_holidays_event_0, "eta") == 0 }}'
  action:
    service: notify.mobile_app_sean_iphone_14
    data:
      title: "State Holiday Today"
      message: "Today it is {{ states('sensor.ical_czech_holidays_event_0')}}, you don't need to go to work!"
      data:
        push:
          thread-id: "info"

- id: mini_countryman_clima_on
  alias: 'Turn on Car Clima'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.mini_countryman_clima
    to: 'on'
  action:
    service: bmw_connected_drive.activate_air_conditioning
    data:
      vin: !secret mini_countryman_vin

- id: mini_countryman_clima_off
  alias: 'Turn off Car Clima'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.cooper_s_e_all4_door_lock_state
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.mini_countryman_clima 

#frontend currently uses following entities for display    
#entity: variable.czechia_coronavirus_new_backup  
#entity: variable.czechia_coronavirus_new_yesterday


#data flows like this:
# new_yesterday->new_backup->new_day_before

- id: backup_new_coronavirus_cases
  alias: backup_new_coronavirus_cases
  initial_state: 'true'
  trigger:
    platform: state
#    entity_id: variable.czechia_coronavirus_new_day_before
    entity_id: sensor.czechia_coronavirus_new_yesterday
  action:
    service: variable.set_variable
    data:
      variable: czechia_coronavirus_new_backup
      value: >
          {{ states('sensor.czechia_coronavirus_new_yesterday')}}
      attributes:
          history_1_day: "{{states('sensor.czechia_coronavirus_new_yesterday')}}"
          history_2_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_1_day')}}"
          history_3_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_2_day')}}"
          history_4_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_3_day')}}"
          history_5_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_4_day')}}"
          history_6_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_5_day')}}"
          history_7_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_6_day')}}"
          history_8_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_7_day')}}"
          history_9_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_8_day')}}"
          history_10_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_9_day')}}"
          history_11_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_10_day')}}"
          history_12_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_11_day')}}"
          history_13_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_12_day')}}"
          history_14_day: "{{state_attr('sensor.czechia_coronavirus_new_backup','history_13_day')}}"

- id: backup_coronavirus_deaths
  alias: backup_coronavirus_deaths
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.czechia_coronavirus_deaths
  action:
    service: variable.set_variable
    data:
      variable: czechia_coronavirus_total_deaths
      value: >
          {{ states('sensor.czechia_coronavirus_deaths')}}
      attributes:
          history_1_day: "{{states('sensor.czechia_coronavirus_total_deaths')}}"
          history_2_day: "{{state_attr('sensor.czechia_coronavirus_total_deaths','history_1_day')}}"
          history_3_day: "{{state_attr('sensor.czechia_coronavirus_total_deaths','history_2_day')}}"
          history_4_day: "{{state_attr('sensor.czechia_coronavirus_total_deaths','history_3_day')}}"
          history_5_day: "{{state_attr('sensor.czechia_coronavirus_total_deaths','history_4_day')}}"
          history_6_day: "{{state_attr('sensor.czechia_coronavirus_total_deaths','history_5_day')}}"
          history_7_day: "{{state_attr('sensor.czechia_coronavirus_total_deaths','history_6_day')}}"
          history_8_day: "{{state_attr('sensor.czechia_coronavirus_total_deaths','history_7_day')}}"
         
          
#          {{ states('sensor.coronavirus_new_cases_cz')}}
- id: new_coronavirus_cases_swap_data
  alias: new_coronavirus_cases_swap_data
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.coronavirus_new_cases_cz
  condition:
    condition: numeric_state
    entity_id: sensor.coronavirus_new_cases_cz
    above: 0
  action:
    service: variable.set_variable
    data:
      variable: czechia_coronavirus_new_day_before
      value: >
          {{ states('sensor.czechia_coronavirus_new_backup')}}

- id: preserve_yesterdays_coronavirus_cases
  alias: "Preserve Yesterday's Coronavirus Cases"
  initial_state: 'true'
  trigger:
    platform: time
    at: '12:35:00'
  action:
    service: variable.set_variable
    data:
      variable: czechia_coronavirus_yesterday
      value: >
          {{ states('sensor.czechia_coronavirus_confirmed')}}
          

- id: calculate_coronavirus_delta_yesterday
  alias: "Calculate Change in Coronavirus Cases Yesterday"
  initial_state: 'true'
  trigger:
    platform: time
    at: '12:30:00'
  action:
    - service: variable.set_variable
      data:
        variable: czechia_coronavirus_new_yesterday
        value: >
            {{ (states('sensor.czechia_coronavirus_confirmed'))|int - (states('sensor.czechia_coronavirus_yesterday'))|int }}
    - service: variable.set_variable
      data:
        variable: czechia_coronavirus_new_yesterday_units
        value: >
            {{ (states('sensor.czechia_coronavirus_confirmed'))|int - (states('sensor.czechia_coronavirus_yesterday'))|int }}

- id: calculate_coronavirus_delta_today
  alias: "Calculate Change in Coronavirus Cases Today"
  initial_state: 'true'
  trigger:
    platform: time_pattern
    minutes: '/15'
  action:
    - service: variable.set_variable
      data:
        variable: czechia_coronavirus_new_today
        value: >
            {{ (states('sensor.czechia_coronavirus_confirmed'))|int - (states('sensor.czechia_coronavirus_yesterday'))|int }}
    - service: variable.set_variable
      data:
        variable: czechia_coronavirus_new_today_units
        value: >
            {{ (states('sensor.czechia_coronavirus_confirmed'))|int - (states('sensor.czechia_coronavirus_yesterday'))|int }}

- id: reminders_label_update
  alias: reminders_label_update
  trigger:
    - platform: time_pattern
      minutes: '/30'
  action:
    - service: homeassistant.update_entity
      entity_id: binary_sensor.reminders_label
      
- id: narnia_raid_degraded_daily_warning
  alias: narnia_raid_degraded_daily_warning
  initial_state: 'true'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: state
    entity_id: 'sensor.narnia_raid_status'
    state: 'Degraded'
  action:
    service: notify.mobile_app_sean_iphone_14
    data:
      title: "RAID Warning"
      message: "The RAID Array on Narnia is Degraded"
      data:
        push:
          thread-id: "error"

#the speedtest service was deprecated and the default is once an hour anyway, so I think this isn't needed any more.

#- id: run_speedtest
#  alias: run_speedtest
#  initial_state: 'true'
#  trigger:
#    platform: time_pattern
#    minutes: 59
#  action:
#    service: speedtestdotnet.speedtest

- id: server_room_flooding
  alias: server_room_flooding
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.server_room_flood_sensor
    to: 'on'
  action:
    - service: notify.sean_alena
      data:
        title: "Server Room Flooding"
        message: "The server room is flooding!!"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "error"
    - service: script.house_announcement
      data:
        message: "Attention! The server room is flooding! Attention! The server room is flooding!"

- id: update_sebs_naptime
  alias: update_sebs_naptime
  trigger:
    platform: time_pattern
    minutes: 5
  action:
    service: homeassistant.update_entity
    entity_id: binary_sensor.seb_naptime

- id: sebastian_is_up
  alias: sebastian_is_up
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.sebs_room_motion
      to: 'on'
  condition:
    condition: or
    conditions:
      - condition: time
        after: '22:00:00'
        before: '7:00:00'
      - condition: time
        after: '14:00:00'
        before: '16:00:00'
  action:
    service: notify.sean_alena
    data:
      title: "Sebastian is Awake"
      message: "Sebastian is Awake"
      data:
        push:
          thread-id: "info"

- id: turn_on_shuffle_from_input_boolean
  alias: turn_on_shuffle_from_input_boolean
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.itunes_shuffle
    from: 'off'
    to: 'on'
  condition: 
    condition: template
    value_template: '{{ state_attr("media_player.itunes", "shuffle") == false}}'
  action:
    service: rest_command.shuffle_on

- id: turn_off_shuffle_from_input_boolean
  alias: turn_off_shuffle_from_input_boolean
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.itunes_shuffle
    from: 'on'
    to: 'off'
  condition: 
    condition: template
    value_template: '{{ state_attr("media_player.itunes", "shuffle") == true}}'
  action:
    service: rest_command.shuffle_off
      
- id: sync_shuffle_input_boolean_to_external_on
  alias: sync_shuffle_input_boolean_to_external_on
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: media_player.itunes
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ state_attr("media_player.itunes", "shuffle") == true}}'
      - condition: state
        entity_id: input_boolean.itunes_shuffle
        state: 'off'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.itunes_shuffle

- id: sync_shuffle_input_boolean_to_external_off
  alias: sync_shuffle_input_boolean_to_external_off
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: media_player.itunes
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ state_attr("media_player.itunes", "shuffle") == false}}'
      - condition: state
        entity_id: input_boolean.itunes_shuffle
        state: 'on'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.itunes_shuffle


#- id: update_airvisualnode_home_data
#  alias: update_airvisualnode_home_data
#  initial_state: 'on'
#  trigger:
#    minutes: '/5'
#    platform: time_pattern
#  action:
#    - service: homeassistant.update_entity
#      entity_id: sensor.home_air_quality
#    - service: homeassistant.update_entity
#      entity_id: sensor.home_co2
#    - service: homeassistant.update_entity
#      entity_id: sensor.home_pm0_1_particulate_level
#    - service: homeassistant.update_entity
#      entity_id: sensor.home_pm10_particulate_level
#    - service: homeassistant.update_entity
#      entity_id: sensor.home_pm2_5_particulate_level
#    - service: homeassistant.update_entity
#      entity_id: sensor.home_pm2_5_sensor_life    


- id: kitchen_sink_flooding
  alias: kitchen_sink_flooding
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.kitchen_sink_flood_sensor
    to: 'on'
  action:
    - service: notify.sean_alena
      data:
        title: "Water under the Kitchen Sink"
        message: "It's wet under the kitchen sink"
        data:
          push:
            thread-id: "error"
    - service: script.house_announcement
      data:
        message: "Attention! There is water under the kitchen sink! Attention! There's water under the kitchen sink!"

- id: announce_someone_at_the_gate
  alias: announce_someone_at_the_gate
  initial_state: 'true'
  trigger:
  - platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.hank_electronics_ltd_hkzw_scn04_scene_controller
      scene_data: 0
      scene_id: 3
  action:
    - service: script.house_announcement
      data:
        message: "Excuse me. Someone is at the front gate, please let them in. Sean is not available to open it right now."
 
#  - platform: event
#    event_type: zwave.scene_activated
#    event_data:
#      entity_id: zwave.fibaro_button_white
#      scene_data: 7680
#      scene_id: 1


- id: announce_someone_at_the_gate_sophie
  alias: announce_someone_at_the_gate_sophie
  initial_state: 'true'
  trigger:
  - platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.hank_electronics_ltd_hkzw_scn04_scene_controller
      scene_data: 2
      scene_id: 3
  action:
    - data:
        data:
          type: tts
        message: "Excuse me Sophie. Someone is at the front gate, please let them in. Mama and Papa are not available to open it right now."
      service: notify.alexa_media_alexa_sophie_s_room_echo_dot

#  - platform: event
#    event_type: zwave.scene_activated
#    event_data:
#      entity_id: zwave.fibaro_button_white
#      scene_data: 7800
#      scene_id: 1

- id: coming_home_mail_sean
  alias: coming_home_mail_sean
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: device_tracker.seans_iphone_14
    to: 'home'
  condition:
    condition: state
    entity_id: 'sensor.bio_odpad_day'
    state: 'Today'
  action:
    service: notify.mobile_app_sean_iphone_14
    data:
      title: "Take in the mail"
      message: "Hey as long as you are coming home, you might as well check the mailbox."


- id: coming_home_mail_alena
  alias: coming_home_mail_alena
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: device_tracker.alenas_iphone
    to: 'home'
  condition:
    condition: state
    entity_id: 'sensor.bio_odpad_day'
    state: 'Today'
  action:
    service: notify.mobile_app_alena_iphone
    data:
      title: "Take in the mail"
      message: "Hey as long as you are coming home, you might as well check the mailbox."

- id: basement_sliding_door_open_alexa
  alias: basement_sliding_door_open_alexa
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.basement_sliding_door
      to: 'on'
      for:
        seconds: 8
    - platform: state
      entity_id: binary_sensor.basement_sliding_door
      to: 'on'
      for:
        minutes: 1
  action:
    service: script.announce_you_left_the_sliding_door_open
#    service: notify.alexa_media_alexa_garage
#    data:
#      message: "Excuse me, you've left the sliding door open. Please don't forget to close it"
#      data:
#        type: tts


- id: tell_sebastian_to_leave_tablet_alone
  alias: tell_sebastian_to_leave_tablet_alone
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: !secret kindle_master_closet_sensor
    attribute: charging
    to: false
  condition:
    condition: template
    value_template: "{{ (((as_timestamp(now()) - as_timestamp(states('sensor.uptime'))) | default(0)) | int < 300)}}"
  action:
    service: script.announce_sebastian_dont_play_with_tablet
#    service: notify.alexa_media_master_closet_kindle
#    data:
#      message: "Sebastian, you know you aren't supposed to play with this tablet. Please put it back where you found it so you don't get in trouble."
#      data:
#        type: tts


- id: thank_sebastian_for_putting_tablet_back
  alias: thank_sebastian_for_putting_tablet_back
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: !secret kindle_master_closet_sensor
    attribute: charging
    to: true
  condition:
    condition: template
    value_template: "{{ (((as_timestamp(now()) - as_timestamp(states('sensor.uptime'))) | default(0)) | int < 300)}}"
  action:
    service: script.announce_thank_sebastian_for_putting_back_tablet

#    service: notify.alexa_media_master_closet_kindle
#    data:
#      message: "Thank you for putting the tablet back Sebastian."
#      data:
#        type: tts

- id: alexa_media_player_authentication_required
  alias: Alexa Media Player Authentication Required
  trigger:
    platform: event
    event_type: alexa_media_relogin_required
  condition: []
  action:
  - service: notify.mobile_app_sean_iphone_14
    data:
      title: "Alexa Needs Authentication"
      message: "Alexa Media's authentication has expired, please renew it"

- id: reload_kitchen_kiosk_ui_every_30_minutes
  alias: reload_kitchen_kiosk_ui_every_30_minutes
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: switch.kindle_kitchen_screensaver
      to: 'on'
      for:
        minutes: 5
    - platform: state
      entity_id: timer.kitchen_tablet_reload
      to: 'idle'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: !secret kindle_kitchen_motion_sensor
        state: 'off'
        for:
          minutes: 5
      - condition: state
        entity_id: timer.kitchen_tablet_reload
        state: 'idle'
  action:
    - service: shell_command.reload_ui_kindle_fire_kitchen
    - service: timer.start
      data:
        entity_id: timer.kitchen_tablet_reload

- id: reload_closet_kiosk_ui_every_30_minutes
  alias: reload_closet_kiosk_ui_every_30_minutes
  initial_state: 'on'  
  trigger:
    - platform: state
      entity_id: switch.kindle_closet_screensaver
      to: 'on'
      for:
        minutes: 5
    - platform: state
      entity_id: timer.closet_tablet_reload
      to: 'idle'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: !secret kindle_master_closet_motion_sensor
        state: 'off'
        for:
          minutes: 4
          seconds: 59
      - condition: state
        entity_id: timer.closet_tablet_reload
        state: 'idle'
  action:
    - service: shell_command.reload_ui_kindle_fire_closet
    - service: timer.start
      data:
        entity_id: timer.closet_tablet_reload


- id: start_tablet_reload_timers
  alias: start_tablet_reload_timers
  initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start     
  action:
    - service: timer.start
      data:
        entity_id: timer.closet_tablet_reload  
    - service: timer.start
      data:
        entity_id: timer.kitchen_tablet_reload 
        
- id: sync_shopping_list
  alias: sync_shopping_list
  initial_state: 'on'
  trigger:
    - platform: webhook
      webhook_id: !secret shopping_sync_key
      local_only: false
  action:
    - service: pyscript.sync_shopping_list
    - delay: 2
    - service: shell_command.reload_ui_kindle_fire_entrance 
      

- id: remind_to_plug_car_in
  alias: remind_to_plug_car_in
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: device_tracker.cooper_s_e_all4
    to: 'home'
  action:
    - choose:
      - conditions:
        - condition: template
          value_template: >
            {{ is_state('device_tracker.seans_iphone_14', 'home') and ((now() - states.device_tracker.seans_iphone_14.total_seconds()) < 6*60) and is_state('binary_sensor.car_needs_charging', 'Charge It') }}
        sequence:
          - service: notify.mobile_app_sean_iphone_14
            data:
              title: "Plug Car In"
              message: "The car needs to be charged, please plug it in."
              data:
                push:
                  thread-id: "appliances"
    - choose:
      - conditions:
        - condition: template
          value_template: > 
            {{ is_state('device_tracker.alenas_iphone', 'home') and ((now() - device_tracker.alenas_iphone.total_seconds()) < 6*60) and is_state('binary_sensor.car_needs_charging', 'Charge It') }}
        sequence:
          - service: notify.mobile_app_alena_iphone
            data:
              title: "Plug Car In"
              message: "The car needs to be charged, please plug it in."
              data:
                push:
                  thread-id: "appliances"

#garage door opened or closed in last 3 minutes
- id: welcome_car_and_remind_to_charge_it
  alias: welcome_car_and_remind_to_charge_it
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_zone_12
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ states('device_tracker.cooper_s_e_all4')!='home'}}"

#      - condition: not
#        conditions:
#        - condition: state
#          entity_id: device_tracker.cooper_s_e_all4
#          state: 'home'
      - condition: template
        value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.watch_garage_door_to_have_time_of_change.attributes.last_triggered | default(0)) | int < 300)}}'
  action:
    - delay: "00:00:26"
    - data:
        data:
          type: tts
        message: "Welcome home. Please remember to plug the car in to charge. Thank you"
      service: notify.alexa_media_alexa_garage
    - delay: "00:05:00"

- id: watch_garage_door_to_have_time_of_change
  alias: watch_garage_door_to_have_time_of_change
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.ecolink_garage_door
  action: []


#
#- id: open_curtains_in_morning
#  alias: open_curtains_in_morning
#  initial_state: 'true'
#  trigger:
#    - platform: state
#      entity_id: binary_sensor.play_room_zone_3
#      to: 'on'
#    - platform: state
#      entity_id: binary_sensor.living_room_zone_4
#      to: 'on'    
#  condition:
#    condition: and
#    conditions:
#    - condition: state  # 'day' condition: from sunrise until sunset
#      entity_id: sun.sun
#      state: "above_horizon"
#    - condition: state  # 'day' condition: from sunrise until sunset
#      entity_id: input_boolean.auto_curtain_open_state
#      state: "off"
#    - condition: time
#      before: "21:00:00"
#  action:
#    - service: notify.mobile_app_sean_iphone_14
#      data:
#        title: "Curains Opening"
#        message: "Curtains would be opening now"
#    - service: input_boolean.turn_on
#      data:
#        entity_id: input_boolean.auto_curtain_open_state
#    
#- id: close_curtains_in_evening
#  alias: close_curtains_in_evening
#  initial_state: 'true'
#  trigger:
#    - platform: state
#      entity_id: sun.sun
#      to: "below_horizon"
#    - platform: time
#      at: "21:00:00"
#  action:
#    - service: notify.mobile_app_sean_iphone_14
#      data:
#        title: "Curains Closing"
#        message: "Curtains would be closing now"  
#    - service: input_boolean.turn_off
#      data:
#        entity_id: input_boolean.auto_curtain_open_state 


- id: smoke_laundry_room
  alias: smoke_laundry_room
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.laundry_room_smoke
    to: "on"
#    platform: numeric_state
#    entity_id: sensor.laundry_room_smoke
#    above: 1
#    below: 3
  action:
    - service: notify.whole_family
      data:
        title: "Alert! Smoke Detected!"
        message: "Smoke was detected in the laundry room! Investigate immediately and evactuate!"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "error"
    - service: script.house_announcement
      data:
        message: "Smoke was detected in the laundry room! Investigate immediately and evactuate!"

- id: smoke_kitchen
  alias: smoke_kitchen
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.kitchen_smoke_detector_smoke
    to: "on"
#    platform: numeric_state
#    entity_id: sensor.kitchen_smoke_detector_smoke
#    above: 1
#    below: 3
  action:
    - service: notify.whole_family
      data:
        title: "Alert! Smoke Detected!"
        message: "Smoke was detected in the kitchen! Investigate immediately and evactuate!"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "error"
    - service: script.house_announcement
      data:
        message: "Smoke was detected in the kitchen! Investigate immediately and evactuate!"

- id: smoke_play_room
  alias: smoke_play_room
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.play_room_smoke
    to: "on"
#    platform: numeric_state
#    entity_id: sensor.play_room_smoke
#    above: 1
#    below: 3
  action:
    - service: notify.whole_family
      data:
        title: "Alert! Smoke Detected!"
        message: "Smoke was detected in the play room! Investigate immediately and evactuate!"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "error"
    - service: script.house_announcement
      data:
        message: "Smoke was detected in the play room! Investigate immediately and evactuate!"


- id: smoke_2nd_floor
  alias: smoke_2nd_floor
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.2nd_floor_smoke
    to: "on"
#    platform: numeric_state
#    entity_id: sensor.2nd_floor_smoke
#    above: 1
#    below: 3
  action:
    - service: notify.whole_family
      data:
        title: "Alert! Smoke Detected!"
        message: "Smoke was detected in the 2nd floor hallway! Investigate immediately and evactuate!"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "error"
    - service: script.house_announcement
      data:
        message: "Smoke was detected in the 2nd floor hallway! Investigate immediately and evactuate!"

- id: smoke_sebastians_room
  alias: smoke_sebastians_room
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.sebastians_room_smoke
    to: "on"
#    platform: numeric_state
#    entity_id: sensor.sebastians_room_smoke
#    above: 1
#    below: 3
  action:
    - service: notify.whole_family
      data:
        title: "Alert! Smoke Detected!"
        message: "Smoke was detected in Sebastian's Room! Investigate immediately and evactuate!"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "error"
    - service: script.house_announcement
      data:
        message: "Smoke was detected in Sebastian's Room! Investigate immediately and evactuate!"

- id: smoke_3rd_floor_hallway
  alias: smoke_3rd_floor_hallway
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.3rd_floor_hallway_smoke
    to: "on"
#    platform: numeric_state
#    entity_id: sensor.sebastians_room_smoke
#    above: 1
#    below: 3
  action:
    - service: notify.whole_family
      data:
        title: "Alert! Smoke Detected!"
        message: "Smoke was detected in the 3rd floor hallway! Investigate immediately and evactuate!"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "error"
    - service: script.house_announcement
      data:
        message: "Smoke was detected in the 3rd floor hallway! Investigate immediately and evactuate!"


#- id: house_announcement_test
#  alias: house_announcement_test
#  initial_state: 'true'
#  mode: single
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.play_room_smoke
#    above: 1
#    below: 3
#  action:
#    service: script.house_announcement
#    data:
#      message: "This is a test"
    

- id: turn_off_headache
  alias: turn_off_headache
  initial_state: 'true'
  trigger:
    platform: time
    at: '04:00:00'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sean_headache


#garage door opened or closed in last 3 minutes
- id: tv_timer_almost_done_5_min
  alias: tv_timer_almost_done_5_min
  initial_state: 'true'
  trigger:
    - platform: template
      value_template: "{{ (state_attr('timer.tv_timer', 'remaining') | int) < 300 }}"
  action:
    - data:
        data:
          type: tts
        message: "Excuse me, this is a reminder that the TV will turn off in 5 minutes. Thank you."
      service: notify.alexa_media_alexa_living_room
    - service: notify.philips_tv
      data:
        title: TV Timer
        message: The TV will turn off in 5 minutes.

- id: tv_timer_almost_done_1_min
  alias: tv_timer_almost_done_1_min
  initial_state: 'true'
  trigger:
    - platform: template
      value_template: "{{ (state_attr('timer.tv_timer', 'remaining') | int) < 60 }}"
  action:
    - data:
        data:
          type: tts
        message: "Excuse me, this is a reminder that the TV will turn off in 1 minute. Please turn off game consoles. Thank you."
      service: notify.alexa_media_alexa_living_room
    - service: notify.philips_tv
      data:
        title: TV Timer
        message: The TV will turn off in 1 minutes. Please save what you are doing an turn everything off.