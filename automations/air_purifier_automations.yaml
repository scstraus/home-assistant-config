      
############## SOPHIE AIR PURIFIER #############


########### AQI ###############

- id: preserve_sophies_room_aqi
  alias: 'Preserve Sophies Room AQI to Variable'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.sophies_room_aqi
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.sophies_room_aqi', 0) }}"
  action:
    service: variable.set_variable
    data:
      variable: sophies_room_aqi
    data_template:
      value: >
          {{ states('sensor.sophies_room_aqi')}}


- id: preserve_sophies_room_aqi_description
  alias: 'Preserve Sophies Room AQI description to Variable'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.sophies_room_aqi_description
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.sophies_room_aqi_description', '0 (Good)') }}"
  action:
    service: variable.set_variable
    data:
      variable: sophies_room_aqi_description
    data_template:
      value: >
          {{ states('sensor.sophies_room_aqi_description')}}
 

############### On/Off #################

- id: turn_on_sophies_air_purifier_if_air_is_bad
  alias: "Turn on Sophie's Air Purifier if the air is bad"
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  condition:
    condition: time
    after: '19:00:00'
    before: '7:00:00'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sophies_air_purifier


- id: turn_on_sophies_air_purifier_if_air_is_bad_2
  alias: "Turn on Sophie's Air Purifier if the air is bad 2"
  initial_state: 'true'
  trigger:
    platform: time
    at: '19:00:00'
  condition:
    condition: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: turn_off_sophies_air_purifier_in_the_morning
  alias: "Turn off Sophie's Air Purifier in the morning"
  initial_state: 'true'
  trigger:
    platform: time
    at: '8:00:00'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: turn_on_sophie_air_purifier_during_day_if_motion
  alias: "Turn on Sophie's Air Purifier During the Day if Motion in Room"
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.sophies_room_zone_10
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.hlubocepy_air_quality
        above: 70  
      - condition: state
        entity_id: device_tracker.sophie
        state: 'home'
      - condition: time
        after: '8:00:00'
        before: '19:00:00'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: turn_off_sophie_air_purifier_aqi_left_home
  alias: "Turn off Sophie's Air Purifier for AQI or Left Home"
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: device_tracker.sophie
      from: 'home'
    - platform: numeric_state
      entity_id: sensor.hlubocepy_air_quality
      below: 65
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: turn_off_sophie_air_purifier_if_no_motion
  alias: "Turn off Sophie's Air Purifier for No Motion"
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.sophies_room_zone_10
      to: 'off'
      for: 
        minutes: 59
  condition:
    condition: time
    after: '8:00:00'
    before: '19:00:00'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sophies_air_purifier


############# Input Select ################

- id: turn_on_sophies_air_purifier_from_input_select
  alias: "Turn on Sophie's Air Purifier from Input Select"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.sophies_air_purifier
    to: 'on'
  condition:
    condition: state
    entity_id: fan.sophies_room_air_purifier
    state: 'off'
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.sophies_room_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_preset_mode
      data:
        entity_id: fan.sophies_room_air_purifier
        preset_mode: Silent
    

- id: turn_on_sophies_air_purifier_from_input_select_after unavailable
  alias: "Turn on Sophie's Air Purifier from Input Select after Unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sophies_room_air_purifier
    from: 'unavailable'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sophies_air_purifier
        state: 'on'
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.input_boolean.sophies_air_purifier.last_changed)) < 600 }}"
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.sophies_room_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_preset_mode
      data:
        entity_id: fan.sophies_room_air_purifier
        preset_mode: Silent

- id: turn_off_sophies_air_purifier_from_input_select
  alias: "Turn off Sophie's Air Purifier from Input Select"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.sophies_air_purifier
    to: 'off'
  condition:
    condition: state
    entity_id: fan.sophies_room_air_purifier
    state: 'on'
  action:
    service: fan.turn_off
    data:
      entity_id: fan.sophies_room_air_purifier
    

- id: turn_off_sophies_air_purifier_from_input_select_after unavailable
  alias: "Turn off Sophie's Air Purifier from Input Select after Unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sophies_room_air_purifier
    from: 'unavailable'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sophies_air_purifier
        state: 'off'
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.input_boolean.sophies_air_purifier.last_changed)) < 600 }}"
  action:
    service: fan.turn_off
    data:
      entity_id: fan.sophies_room_air_purifier
      
- id: sync_sophie_air_purifier_input_boolean_to_manual_on
  alias: "Sync Sophie Air Purifier Input Boolean to Manually Turning Air Purifier On"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sophies_room_air_purifier
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sophies_air_purifier
        state: 'off'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: sync_sophie_air_purifier_input_boolean_to_manual_off
  alias: "Sync Sophie Air Purifier Input Boolean to Manually Turning Air Purifier Off"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sophies_room_air_purifier
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sophies_air_purifier
        state: 'on'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sophies_air_purifier



############ SEBASTIAN AIR PURIFIER ##############

######### AQI ##############


- id: preserve_sebastians_room_aqi
  alias: 'Preserve Sebastians Room AQI to Variable'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.sebastians_room_aqi
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.sebastians_room_aqi', 0) }}"
  action:
    service: variable.set_variable
    data:
      variable: sebastians_room_aqi
    data_template:
      value: >
          {{ states('sensor.sebastians_room_aqi')}}
         
- id: preserve_sebastians_room_aqi_description
  alias: 'Preserve Sebastians Room AQI description to Variable'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.sebastians_room_aqi_description
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.sebastians_room_aqi_description', '0 (Good)') }}"
  action:
    service: variable.set_variable
    data:
      variable: sebastians_room_aqi_description
    data_template:
      value: >
          {{ states('sensor.sebastians_room_aqi_description')}}



############## On/off ####################

- id: turn_on_sebastians_air_purifier_if_air_is_bad_at_night
  alias: "Turn on Sebastian's Air Purifier if the air is bad at night"
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  condition:
    condition: time
    after: '19:00:00'
    before: '8:00:00'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier


- id: turn_on_sebastians_air_purifier_if_air_is_bad_at_night_2
  alias: "Turn on Sebastian's Air Purifier if the air is bad at night 2"
  initial_state: 'true'
  trigger:
    platform: time
    at: '19:00:00'
  condition:
    condition: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier

- id: turn_off_sebastians_air_purifier_in_the_morning_or_aqi
  alias: "Turn off Sebastian's Air Purifier in the morning or from AQI"
  initial_state: 'true'
  trigger:
    - platform: time
      at: '8:00:00'
    - platform: numeric_state
      entity_id: sensor.hlubocepy_air_quality
      below: 65
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sebastians_air_purifier

- id: turn_on_sebastians_air_purifier_if_air_is_bad_for_naptime
  alias: "Turn on Sebastian's Air Purifier if the air is bad for naptime"
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  condition:
    condition: time
    after: '12:30:00'
    before: '16:30:00'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier


- id: turn_on_sebastians_air_purifier_if_air_is_bad_for_naptime_2
  alias: "Turn on Sebastian's Air Purifier if the air is bad for naptime 2"
  initial_state: 'true'
  trigger:
    platform: time
    at: '12:30:00'
  condition:
    condition: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier

- id: turn_off_sebastians_air_purifier_after_nap
  alias: "Turn off Sebastian's Air Purifier after nap"
  initial_state: 'true'
  trigger:
    platform: time
    at: '16:30:00'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sebastians_air_purifier
            
###### Input Boolean ########


- id: turn_on_sebastians_air_purifier_from_input_select
  alias: "Turn on Sebastian's Air Purifier from Input Select"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.sebastians_air_purifier
    to: 'on'
  condition:
    condition: state
    entity_id: fan.sebastians_room_air_purifier
    state: 'off'
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.sebastians_room_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_preset_mode
      data:
        entity_id: fan.sebastians_room_air_purifier
        preset_mode: Silent
    

- id: turn_on_sebastians_air_purifier_from_input_select_after unavailable
  alias: "Turn on sebastian's Air Purifier from Input Select after Unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sebastians_room_air_purifier
    from: 'unavailable'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sebastians_air_purifier
        state: 'on'
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.input_boolean.sebastians_air_purifier.last_changed)) < 600 }}"
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.sebastians_room_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_preset_mode
      data:
        entity_id: fan.sebastians_room_air_purifier
        preset_mode: Silent

- id: turn_off_sebastians_air_purifier_from_input_select
  alias: "Turn off sebastian's Air Purifier from Input Select"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.sebastians_air_purifier
    to: 'off'
  condition:
    condition: state
    entity_id: fan.sebastians_room_air_purifier
    state: 'on'
  action:
    service: fan.turn_off
    data:
      entity_id: fan.sebastians_room_air_purifier
    

- id: turn_off_sebastians_air_purifier_from_input_select_after unavailable
  alias: "Turn off sebastian's Air Purifier from Input Select after Unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sebastians_room_air_purifier
    from: 'unavailable'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sebastians_air_purifier
        state: 'off'
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.input_boolean.sebastians_air_purifier.last_changed)) < 600 }}"
  action:
    service: fan.turn_off
    data:
      entity_id: fan.sebastians_room_air_purifier
      
- id: sync_sebastian_air_purifier_input_boolean_to_manual_on
  alias: "Sync sebastian Air Purifier Input Boolean to Manually Turning Air Purifier On"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sebastians_room_air_purifier
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sebastians_air_purifier
        state: 'off'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier

- id: sync_sebastian_air_purifier_input_boolean_to_manual_off
  alias: "Sync sebastian Air Purifier Input Boolean to Manually Turning Air Purifier Off"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sebastians_room_air_purifier
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.sebastians_air_purifier
    state: 'on'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sebastians_air_purifier




############ MASTER BEDROOM AIR PURIFIER ##############

########## On / Off ###############

- id: turn_on_master_bedroom_air_purifier_if_air_is_bad_at_night
  alias: "Turn on Master Bedroom Air Purifier if the air is bad at night"
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  condition:
    condition: time
    after: '21:00:00'
    before: '11:00:00'
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.master_bedroom_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_preset_mode
      data:
        entity_id: fan.master_bedroom_air_purifier
        preset_mode: Silent


- id: turn_on_master_bedroom_air_purifier_if_air_is_bad_at_night_2
  alias: "Turn on Master Bedroom Air Purifier if the air is bad at night 2"
  initial_state: 'true'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.master_bedroom_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_preset_mode
      data:
        entity_id: fan.master_bedroom_air_purifier
        preset_mode: Silent

- id: turn_off_master_bedroom_air_purifier_in_the_morning_or_aqi
  alias: "Turn off Master Bedroom Air Purifier in the morning or from AQI"
  initial_state: 'true'
  trigger:
    - platform: time
      at: '11:00:00'
    - platform: numeric_state
      entity_id: sensor.hlubocepy_air_quality
      below: 65
  action:
    service: fan.turn_off
    data:
      entity_id: fan.master_bedroom_air_purifier


- id: turn_on_master_bedroom_air_purifier_if_air_is_bad_after_unavailable
  alias: "Turn on Master Bedroom Air Purifier if the air is bad after unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.master_bedroom_air_purifier
    from: 'unavailable'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.hlubocepy_air_quality
        above: 70
      - condition: time
        after: '21:00:00'
        before: '11:00:00'
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.master_bedroom_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_preset_mode
      data:
        entity_id: fan.master_bedroom_air_purifier
        preset_mode: Silent