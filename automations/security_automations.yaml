- id: person_in_front
  alias: person_in_front
  initial_state: 'true'
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ 'front_on_property' in trigger.payload_json['after']['entered_zones'] }}"
      - "{{ trigger.payload_json['type'] == 'new' }}"
      - condition: or
        conditions:
        - condition: time
          after: '23:00:00'
          before: '6:40:00'
        - condition: and
          conditions:
          - condition: state
            entity_id: sensor.alarm_state_3_motion_sensors
            state: 'armed_away'
            for:
              minutes: 1
          - condition: template
            value_template: "{{states('group.everyone')!='home'}}"
        - condition: state
          entity_id: sensor.alarm_state_3_motion_sensors
          state: 'triggered'  
  action:
    - service: notify.mobile_app_sean_s_iphone_16
      data_template:
        title: "House Watch"
        message: "There's a Person in Front of the House"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "security"
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
    - delay:
        minutes: 10



- id: person_in_back
  alias: Person In Back
  initial_state: 'true'
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ 'back_on_property' in trigger.payload_json['after']['entered_zones'] }}"
      - "{{ trigger.payload_json['type'] == 'new' }}"
      - condition: or
        conditions:
        - condition: time
          after: '23:00:00'
          before: '7:00:00'
        - condition: state
          entity_id: sensor.alarm_state_3_motion_sensors
          state: 'armed_away'
          for:
            minutes: 1
        - condition: state
          entity_id: sensor.alarm_state_3_motion_sensors
          state: 'triggered'  
  action:
    - service: notify.mobile_app_sean_s_iphone_16
      data_template:
        title: "House Watch"
        message: "There's a Person in Back of the House"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "security"
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
    - delay:
        minutes: 10


- id: person_on_left
  alias: Person On Left
  initial_state: 'true'
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ 'left_on_property' in trigger.payload_json['after']['entered_zones'] }}"
      - "{{ trigger.payload_json['type'] == 'new' }}"
      - condition: or
        conditions:
        - condition: time
          after: '23:00:00'
          before: '7:00:00'
        - condition: state
          entity_id: sensor.alarm_state_3_motion_sensors
          state: 'armed_away'
          for:
            minutes: 1
        - condition: state
          entity_id: sensor.alarm_state_3_motion_sensors
          state: 'triggered'  
  action:
    - service: notify.mobile_app_sean_s_iphone_16
      data_template:
        title: "House Watch"
        message: "There's a Person on the Left of the House"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "security"
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
    - delay:
        minutes: 10

- id: person_on_right
  alias: Person On Right
  initial_state: 'true'
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ 'right_on_property' in trigger.payload_json['after']['entered_zones'] }}"
      - "{{ trigger.payload_json['type'] == 'new' }}"
      - condition: or
        conditions:
        - condition: time
          after: '23:00:00'
          before: '7:00:00'
        - condition: state
          entity_id: sensor.alarm_state_3_motion_sensors
          state: 'armed_away'
          for:
            minutes: 1
        - condition: state
          entity_id: sensor.alarm_state_3_motion_sensors
          state: 'triggered'  
  action:
    - service: notify.mobile_app_sean_s_iphone_16
      data_template:
        title: "House Watch"
        message: "There's a Person on the Right of the House"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "security"
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
    - delay:
        minutes: 10

- id: turn_off_front_security_light_if_it_gets_windy
  alias: 'Turn Off Front Security Light If It Gets Windy'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.tempest_st_00023475_wind_speed
    above: 5
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_off
    data:
      entity_id: switch.front_right_security_lights

- id: turn_off_back_security_light_if_it_gets_windy
  alias: 'Turn Off Back Security Light If It Gets Windy'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.tempest_st_00023475_wind_speed
    above: 6
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_off
    data:
      entity_id: switch.back_left_security_lights

- id: turn_off_back_security_light_at_9pm
  alias: turn_off_back_security_light_at_9pm
  initial_state: 'true'
  trigger:
    platform: time
    at: '21:00:00'
  action:
    service: switch.turn_off
    data:
      entity_id: switch.back_left_security_lights

- id: turn_off_security_lights_if_its_windy
  alias: "Turn Off Front Security Light If It's Windy"
  initial_state: 'true'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: numeric_state
    entity_id: sensor.tempest_st_00023475_wind_speed
    above: 6
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.back_left_security_lights
    - service: switch.turn_off
      data:
        entity_id: switch.front_right_security_lights

- id: turn_off_security_lights_if_its_cold_at_2100
  alias: turn_off_security_lights_if_its_cold_at_2100
  initial_state: 'true'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    - condition: and
      conditions:
      - condition: numeric_state
        entity_id: sensor.tempest_st_00023475_temperature
        below: 5
      - condition: numeric_state
        entity_id: sensor.tempest_st_00023475_temperature
        above: -3
      - condition: numeric_state
        entity_id: sensor.tempest_st_00023475_humidity
        above: 65
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.back_left_security_lights
    - service: switch.turn_off
      data:
        entity_id: switch.front_right_security_lights


- id: turn_off_security_lights_if_its_cold_at_night
  alias: turn_off_security_lights_if_its_cold_at_night
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.tempest_st_00023475_temperature
    below: 5
  condition:
    - condition: and
      conditions:
      - condition: numeric_state
        entity_id: sensor.tempest_st_00023475_temperature
        above: -3
      - condition: numeric_state
        entity_id: sensor.tempest_st_00023475_humidity
        above: 65
      - condition: time
        after: "19:00:00"
        before: "08:00:00"
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.back_left_security_lights
    - service: switch.turn_off
      data:
        entity_id: switch.front_right_security_lights


- id: turn_on_security_lights_in_morning
  alias: turn_on_security_lights_in_morning
  initial_state: 'true'
  trigger:
    platform: time
    at: '9:00:00'
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.back_left_security_lights
    - service: switch.turn_on
      data:
        entity_id: switch.front_right_security_lights

- id: front_right_security_lights_on_if_human
  alias: 'Front+Right Security Lights on if Human'
  initial_state: 'true'
  trigger:
    - platform: numeric_state
      entity_id: sensor.front_person_count
      above: 0
    - platform: numeric_state
      entity_id: sensor.right_person_count
      above: 0
#    - platform: state
#      entity_id: binary_sensor.human_front
#      to: 'on'
#    - platform: state
#      entity_id: binary_sensor.human_right
#      to: 'on'
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.front_right_security_lights

- id: back_left_security_lights_on_if_human
  alias: 'Back+Left Security Lights on if Human'
  initial_state: 'true'
  trigger:
    - platform: numeric_state
      entity_id: sensor.back_person_count
      above: 0
    - platform: numeric_state
      entity_id: sensor.left_person_count
      above: 0
#    - platform: state
#      entity_id: binary_sensor.human_back
#      to: 'on'
#    - platform: state
#      entity_id: binary_sensor.human_left
#      to: 'on'
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.back_left_security_lights

- id: alarm_is_on_alena_home
  alias: 'Alarm is on - Alena is home'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: device_tracker.alenas_iphone
    to: 'home'
  condition:
    condition: state
    entity_id: sensor.alarm_state_3_motion_sensors
    state: armed_away
  action:
    service: notify.mobile_app_alena_iphone
    data:
      title: "Warning: Alarm On"
      message: "The alarm is turned on. Remember to turn it off before opening the door."
      data:
        push:
          thread-id: "security"

- id: alarm_is_on_sean_home
  alias: 'Alarm is on - Sean is home'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: device_tracker.sean_s_iphone_16
    to: 'home'
  condition:
    condition: state
    entity_id: sensor.alarm_state_3_motion_sensors
    state: armed_away
  action:
    service: notify.mobile_app_sean_s_iphone_16
    data_template:
      title: "Alarm is armed"
      message: "Alarm is armed. Please make sure to turn it off before opening the doors"
      data:
        push:
          sound:
            name: "News_Flash.caf"
            critical: 1
            volume: 1.0
          thread-id: "location"

      
- id: alarm_turned_on_alena
  alias: 'Alarm turned on notification - Alena'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed_away'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed'
  action:
    service: notify.mobile_app_alena_iphone
    data:
      title: "Alarm is On At Home"
      message: "The alarm has been activated at home"
      data:
        push:
          thread-id: "security"
  
- id: alarm_turned_off_alena
  alias: 'Alarm turned off notification - Alena'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed_away'
      to: 'disarmed'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed'
      to: 'disarmed'
  action:
    service: notify.mobile_app_alena_iphone
    data:
      title: "Alarm is Off At Home"
      message: "The alarm has been turned off at home"
      data:
        push:
          thread-id: "security"
      
- id: alarm_turned_on_sean
  alias: 'Alarm turned on notification - Sean'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed_away'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed'
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.sean_location', 'Traveling') }}"
  action:
    service: notify.mobile_app_sean_s_iphone_16
    data:
      title: "Alarm is On At Home"
      message: "The alarm has been activated at home"
      data:
        push:
          thread-id: "security"
        
- id: alarm_turned_off_sean
  alias: 'Alarm turned off notification - Sean'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed_away'
      to: 'disarmed'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed'
      to: 'disarmed'
  action:
    service: notify.mobile_app_sean_s_iphone_16
    data:
      title: "Alarm is Off At Home"
      message: "The alarm has been turned off at home"
      data:
        push:
          thread-id: "security"

- id: alarm_triggered
  alias: 'Alarm is triggered'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'triggered'
    - platform: state
      entity_id: sensor.alarm_state_2_1st_floor
      to: 'triggered'
    - platform: state
      entity_id: sensor.alarm_state_1_laundry
      to: 'triggered'
  action:
    service: notify.sean_alena
    data:
      title: "!!Alarm Triggered!!"
      message: "The alarm at home has been triggered and is now alarming!"
      data:
        push:
          sound:
            name: "Update.caf"
            critical: 1
            volume: 1.0
          category: camera
          thread-id: "security"
        entity_id: camera.front_person
        clickAction: 8

- id: sensor_notification
  alias: 'Sensor Notification'
  initial_state: 'false'
  trigger:
    - platform: state
      entity_id: binary_sensor.library_zone_6
      to: 'on'
    - platform: state
      entity_id: binary_sensor.master_bedroom_zone_5
      to: 'on'
    - platform: state
      entity_id: binary_sensor.master_closet_zone_8
      to: 'on'
    - platform: state
      entity_id: binary_sensor.play_room_zone_3
      to: 'on'
    - platform: state
      entity_id: binary_sensor.sophies_room_zone_10
      to: 'on'
    - platform: state
      entity_id: binary_sensor.play_room_zone_3
      to: 'on'
  action:
    service: notify.mobile_app_sean_s_iphone_16
    data:
      title: "Activity Notification"
      message: "Activity Notification"
      data:
        push:
          sound:
            name: "Alert_SpartanConnecting_Haptic.caf"
            critical: 1
            volume: 1.0
          thread-id: "security"

########### The below have all been replaced by an app daemon script called manage_kiosk_camera_popups  ##################


#
#- id: popup_on_kiosk_back
#  alias: 'Popup on Kiosk Back'
#  initial_state: 'true'
#  trigger:
#    - platform: numeric_state
#      entity_id: sensor.back_person
#      above: 0
#    - platform: state
#      entity_id: binary_sensor.camera_back_motion_alarm  
#      to: 'on'
#  action:
#    - service: browser_mod.more_info
#      data:
#        entity_id: camera.back_substream
#        deviceID:
#          - !secret kindle_kitchen_deviceid
#    - service: browser_mod.more_info
#      data:
#        entity_id: camera.back_substream
#        deviceID:
#          - !secret kindle_master_closet_deviceid
#    - service: shell_command.screensaver_stop_kindle_fire_kitchen
#    - service: shell_command.screensaver_stop_kindle_fire_closet
#    - service: shell_command.screen_on_kindle_fire_kitchen
#    - service: shell_command.screen_on_kindle_fire_closet 
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_wake_screen_timer_1
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_wake_screen_timer_2
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_close_camera_popup_timer
#
#- id: popup_on_kiosk_front
#  alias: 'Popup on Kiosk Front'  
#  initial_state: 'true'
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.front_person
#    above: 0
#  action:
#    - service: browser_mod.more_info
#      data:
#        entity_id: camera.front_substream
#        deviceID:
#          - !secret kindle_kitchen_deviceid
#    - service: browser_mod.more_info
#      data:
#        entity_id: camera.front_substream
#        deviceID:
#          - !secret kindle_master_closet_deviceid
#    - service: shell_command.screensaver_stop_kindle_fire_kitchen
#    - service: shell_command.screensaver_stop_kindle_fire_closet
#    - service: shell_command.screen_on_kindle_fire_kitchen
#    - service: shell_command.screen_on_kindle_fire_closet 
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_wake_screen_timer_1
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_wake_screen_timer_2
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_close_camera_popup_timer
#
#- id: popup_on_kiosk_left
#  alias: 'Popup on Kiosk Left'  
#  initial_state: 'true'
#  trigger:
#    - platform: numeric_state
#      entity_id: sensor.left_person
#      above: 0
#    - platform: state
#      entity_id: binary_sensor.camera_left_motion_alarm  
#      to: 'on'
#  action:
#    - service: browser_mod.more_info
#      data:
#        entity_id: camera.left_substream
#        deviceID:
#          - !secret kindle_kitchen_deviceid
#    - service: browser_mod.more_info
#      data:
#        entity_id: camera.left_substream
#        deviceID:
#          - !secret kindle_master_closet_deviceid
#    - service: shell_command.screensaver_stop_kindle_fire_kitchen
#    - service: shell_command.screensaver_stop_kindle_fire_closet
#    - service: shell_command.screen_on_kindle_fire_kitchen
#    - service: shell_command.screen_on_kindle_fire_closet 
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_wake_screen_timer_1
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_wake_screen_timer_2
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_close_camera_popup_timer
#        
#- id: popup_on_kiosk_right
#  alias: Popup on Kiosk Right
#  initial_state: 'true'
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.right_person
#    above: 0
#  action:
#    - service: browser_mod.more_info
#      data:
#        entity_id: camera.right_substream
#        deviceID:
#          - !secret kindle_kitchen_deviceid
#    - service: browser_mod.more_info
#      data:
#        entity_id: camera.right_substream
#        deviceID:
#          - !secret kindle_master_closet_deviceid
#    - service: shell_command.screensaver_stop_kindle_fire_kitchen
#    - service: shell_command.screensaver_stop_kindle_fire_closet
#    - service: shell_command.screen_on_kindle_fire_kitchen
#    - service: shell_command.screen_on_kindle_fire_closet 
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_wake_screen_timer_1
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_wake_screen_timer_2
#    - service: timer.start
#      data:
#        entity_id: timer.tablet_close_camera_popup_timer
#
#- id: keep_fully_kiosk_screen_on_human
#  alias: Keep Fully Kiosk Screen On
#  initial_state: 'true'
#  trigger:
#  - platform: event
#    event_type: timer.finished
#    event_data:
#      entity_id: timer.tablet_wake_screen_timer_1
#  - platform: event
#    event_type: timer.finished
#    event_data:
#      entity_id: timer.tablet_wake_screen_timer_2
#  action:
#    - service: shell_command.screensaver_stop_kindle_fire_kitchen
#    - service: shell_command.screensaver_stop_kindle_fire_closet
#    - service: shell_command.screen_on_kindle_fire_kitchen
#    - service: shell_command.screen_on_kindle_fire_closet 
#
#- id: close_popup_on_kiosk
#  alias: close_popup_on_kiosk
#  initial_state: 'true'
#  trigger:
#    - platform: event
#      event_type: timer.finished
#      event_data:
#        entity_id: timer.tablet_close_camera_popup_timer
#  action:
#    - service: browser_mod.close_popup

- alias: 'Update Last Motion'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.comp_rm_motion_template
      to: 'on'
    - platform: state
      entity_id:
      - binary_sensor.play_room_zone_3
      - binary_sensor.living_room_zone_4
      - binary_sensor.master_bedroom_zone_5
      - binary_sensor.library_zone_6
      - binary_sensor.master_closet_zone_8
      - binary_sensor.sophies_room_zone_10
      - binary_sensor.garage_zone_12
      - binary_sensor.glass_break_sensor_zone_11
      to: 'Detected'
  action:
    service: variable.set_variable
    data:
      variable: last_motion
      attributes_template: >
        {
          "history_1": "{{ variable.state }}",
          "history_2": "{{ variable.attributes.history_1 }}",
          "history_3": "{{ variable.attributes.history_2 }}",
          "history_4": "{{ variable.attributes.history_3 }}",
          "history_5": "{{ variable.attributes.history_4 }}",
          "history_6": "{{ variable.attributes.history_5 }}",
          "history_7": "{{ variable.attributes.history_6 }}",
          "history_8": "{{ variable.attributes.history_7 }}",
          "history_9": "{{ variable.attributes.history_8 }}",
          "history_10": "{{ variable.attributes.history_9 }}"
          }


- alias: 'Update Last Door/Window'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.comp_rm_motion_template
      to: 'on'
    - platform: state
      entity_id:
      - binary_sensor.play_room_zone_3
      - binary_sensor.living_room_zone_4
      - binary_sensor.master_bedroom_zone_5
      - binary_sensor.library_zone_6
      - binary_sensor.master_closet_zone_8
      - binary_sensor.sophies_room_zone_10
      - binary_sensor.garage_zone_12
      - binary_sensor.glass_break_sensor_zone_11
      to: 'Detected'
  action:
    service: variable.set_variable
    data:
      variable: last_door_window
      attributes_template: >
        {
          "history_1": "{{ variable.state }}",
          "history_2": "{{ variable.attributes.history_1 }}",
          "history_3": "{{ variable.attributes.history_2 }}",
          "history_4": "{{ variable.attributes.history_3 }}",
          "history_5": "{{ variable.attributes.history_4 }}",
          "history_6": "{{ variable.attributes.history_5 }}",
          "history_7": "{{ variable.attributes.history_6 }}",
          "history_8": "{{ variable.attributes.history_7 }}",
          "history_9": "{{ variable.attributes.history_8 }}",
          "history_10": "{{ variable.attributes.history_9 }}"
          }

- alias: 'Record Human In Front'
  initial_state: 'true'
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'front' }}"
  action:
    - service: rest_command.record_human_front

- alias: 'Record Human In Back'
  initial_state: 'true'
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'back' }}"
  action:
    - service: rest_command.record_human_back

- alias: 'Record Human In Left'
  initial_state: 'true'
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'left' }}"
  action:
    - service: rest_command.record_human_left

- alias: 'Record Human In Right'
  initial_state: 'true'
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'right' }}"
  action:
    - service: rest_command.record_human_right

- id: truck_outside
  alias: truck_outside
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.truck_front
    above: 0

  action:
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.truck_outside.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.sean_s_iphone_16
                state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_16
            data:
              title: "Special Delivery?"
              message: "There's a Truck Out Front"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_person
                clickAction: 8
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.truck_outside.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.alenas_iphone
                state: 'home'
          sequence:
            service: notify.mobile_app_alena_iphone
            data:
              title: "Special Delivery?"
              message: "There's a Truck Out Front"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_person
                clickAction: 8


- id: someone_at_gate
  alias: someone_at_gate
  initial_state: 'true'
  trigger:
#    platform: state
#    entity_id: binary_sensor.person_outside_gate
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.at_gate_person
    above: 0
    for:
      seconds: 3
  action:
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.someone_at_gate.attributes.last_triggered  | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.sean_s_iphone_16
                state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_16
            data:
              title: "Person at gate"
              message: "There's someone at the front gate"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_person
                clickAction: 8
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.someone_at_gate.attributes.last_triggered  | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.alenas_iphone
                state: 'home'
          sequence:
            service: notify.mobile_app_alena_iphone
            data:
              title: "Person at gate"
              message: "There's someone at the front gate"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_person
                clickAction: 8
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.sean_s_iphone_16
                state: 'home'
          sequence:
            - service: mqtt.publish
              data:
                topic: !secret genesys_5490_notify_topic
                payload: !secret genesys_5490_someone_at_gate_notification

- id: someone_through_gate
  alias: someone_through_gate
  initial_state: 'true'
  mode: single
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ 'inside_gate' in trigger.payload_json['after']['entered_zones'] }}"
      - "{{ trigger.payload_json['type'] == 'new' }}"
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: device_tracker.sean_s_iphone_16
              state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_16
            data_template:
              title: "Person Coming Through Gate"
              message: "Looks like someone is going to or coming from the front gate to the front door"
              data:
                attachment:
                  url: !secret frigate_image_url
                  content-type: jpg
                  hide-thumbnail: false
                clickAction: "/lovelace/8"
    - choose:
        - conditions:
            - condition: state
              entity_id: device_tracker.alenas_iphone
              state: 'home'
          sequence:
            service: notify.mobile_app_alena_iphone
            data_template:
              title: "Person Coming Through Gate"
              message: "Looks like someone is going to or coming from the front gate to the front door"
              data:
                attachment:
                  url: !secret frigate_image_url
                  content-type: jpg
                  hide-thumbnail: false
                clickAction: "/lovelace/8"
    - choose:
        - conditions:
            - condition: state
              entity_id: device_tracker.sean_s_iphone_16
              state: 'home'
          sequence:
            - service: mqtt.publish
              data:
                topic: !secret genesys_5490_notify_topic
                payload: !secret genesys_5490_someone_through_gate_notification
    - delay:
        seconds: 11

- id: car_arrived
  alias: car_arrived
  initial_state: 'true'
  mode: single
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
      - "{{ trigger.payload_json['after']['label'] == 'car' }}"
      - "{{ 'car_pulling_in' in trigger.payload_json['after']['entered_zones'] }}"
      - "{{ trigger.payload_json['type'] == 'new' }}"
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: device_tracker.sean_s_iphone_16
              state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_16
            data_template:
              title: "Car Arrived"
              message: "The car has come through the gate into the driveway"
              data:
                attachment:
                  url: !secret frigate_image_url
                  content-type: jpg
                  hide-thumbnail: false
                clickAction: "/lovelace/8"
    - choose:
        - conditions:
            - condition: state
              entity_id: device_tracker.alenas_iphone
              state: 'home'
          sequence:
            service: notify.mobile_app_alena_iphone
            data_template:
              title: "Car Arrived"
              message: "The car has come through the gate into the driveway"
              data:
                attachment:
                  url: !secret frigate_image_url
                  content-type: jpg
                  hide-thumbnail: false
                clickAction: "/lovelace/8"
    - delay:
        minutes: 10

- id: person_on_sidewalk
  alias: person_on_sidewalk
  initial_state: 'true'
  mode: single
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
    - "{{ trigger.payload_json['after']['label'] == 'person' }}"
    - "{{ 'on_sidewalk' in trigger.payload_json['after']['entered_zones'] }}"
    - "{{ trigger.payload_json['type'] == 'new' }}"
    - condition: time
      after: '23:00:00'
      before: '7:00:00' 
    - condition: state
      entity_id: device_tracker.sean_s_iphone_16
      state: 'home'
  action:
    - service: notify.mobile_app_sean_s_iphone_16
      data_template:
        title: "House Watch"
        message: "There's a Person on The Sidewalk"
        data:
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
    - delay:
        minutes: 10

- id: person_on_back_neighbor_strip
  alias: person_on_back_neighbor_strip
  initial_state: 'true'
  mode: single
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
    - "{{ trigger.payload_json['after']['label'] == 'person' }}"
    - "{{ 'back_on_strip' in trigger.payload_json['after']['entered_zones'] }}"
    - "{{ trigger.payload_json['type'] == 'new' }}"
    - condition: time
      after: '23:00:00'
      before: '7:00:00' 
    - condition: state
      entity_id: device_tracker.sean_s_iphone_16
      state: 'home'
  action:
    - service: notify.mobile_app_sean_s_iphone_16
      data_template:
        title: "House Watch"
        message: "There's a Person on the Neighbor's Strip Next to the Back Yard"
        data:
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
    - delay:
        minutes: 10

- id: person_on_left_neighbor_strip
  alias: person_on_left_neighbor_strip
  initial_state: 'true'
  mode: single
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
    - "{{ trigger.payload_json['after']['label'] == 'person' }}"
    - "{{ 'left_strip' in trigger.payload_json['after']['entered_zones'] }}"
    - "{{ trigger.payload_json['type'] == 'new' }}"
    - condition: time
      after: '23:00:00'
      before: '7:00:00' 
    - condition: state
      entity_id: device_tracker.sean_s_iphone_16
      state: 'home'
  action:
    - service: notify.mobile_app_sean_s_iphone_16
      data_template:
        title: "House Watch"
        message: "There's a Person on the Neighbor's Strip Next to the Left Side of the House by the Swing"
        data:
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
    - delay:
        minutes: 10

- id: person_on_right_neighbors_yard
  alias: person_on_right_neighbors_yard
  initial_state: 'true'
  mode: single
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
    - "{{ trigger.payload_json['after']['label'] == 'person' }}"
    - "{{ 'right_neighbor' in trigger.payload_json['after']['entered_zones'] }}"
    - "{{ trigger.payload_json['type'] == 'new' }}"
    - condition: time
      after: '23:00:00'
      before: '7:00:00' 
    - condition: state
      entity_id: device_tracker.sean_s_iphone_16
      state: 'home'
  action:
    - service: notify.mobile_app_sean_s_iphone_16
      data_template:
        title: "House Watch"
        message: "There's a Person on the Neighbor's Yard by the Right Side of the House Near the Air Conditioner"
        data:
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
    - delay:
        minutes: 10

- id: car_on_sidewalk
  alias: car_on_sidewalk
  initial_state: 'false'
  mode: single
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
    - "{{ trigger.payload_json['after']['label'] == 'car' }}"
    - "{{ 'car_sidewalk' in trigger.payload_json['after']['entered_zones'] }}"
    - "{{ trigger.payload_json['type'] == 'new' }}"
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: device_tracker.sean_s_iphone_16
              state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_16
            data_template:
              title: "New Car In Front of Gate"
              message: "A new car has arrived and is parked in front of the house"
              data:
                attachment:
                  url: !secret frigate_image_url
                  content-type: jpg
                  hide-thumbnail: false
                clickAction: "/lovelace/8"
    - delay:
        minutes: 10
    # - choose:
    #     - conditions:
    #         - condition: state
    #           entity_id: device_tracker.alenas_iphone
    #           state: 'home'
    #       sequence:
    #         service: notify.mobile_app_alena_iphone
    #         data_template:
    #           title: "New Car In Front of Gate"
    #           message: "A new car has arrived and is parked in front of the house"
    #           data:
    #             attachment:
    #               url: !secret frigate_image_url
    #               content-type: jpg
    #               hide-thumbnail: false
    #             clickAction: "/lovelace/8"


#
#- id: car_arrived
#  alias: car_arrived
#  initial_state: 'true'
#  trigger:
##    platform: state
##    entity_id: binary_sensor.car_pulling_up
##    to: 'on'
#    platform: numeric_state
#    entity_id: sensor.car_pulling_in_car
#    above: 0
#  action:
#    - choose:
#        - conditions:
#            - condition: and
#              conditions:
#              - condition: template
#                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.car_arrived.attributes.last_triggered | default(0)) | int > 600)}}'
#              - condition: state
#                entity_id: device_tracker.sean_s_iphone_16
#                state: 'home'
#          sequence:
#            service: notify.mobile_app_sean_s_iphone_16
#            data:
#              title: "Car Arrived"
#              message: "The car has come through the gate into the driveway"
#              data:
#                push:
#                  category: camera
#                  thread-id: "security"
#                entity_id: camera.front_car
#                clickAction: 8
#    - choose:
#        - conditions:
#            - condition: state
#              entity_id: device_tracker.alenas_iphone
#              state: 'home'
#          sequence:
#            service: notify.mobile_app_alena_iphone
#            data:
#              title: "Car Arrived"
#              message: "The car has come through the gate into the driveway"
#              data:
#                push:
#                  category: camera
#                  thread-id: "security"
#                entity_id: camera.front_car
#                clickAction: 8
#
#- id: person_on_sidewalk
#  alias: person_on_sidewalk
#  initial_state: 'true'
#  mode: single
#  trigger:
##    platform: state
##    entity_id: binary_sensor.person_on_sidewalk 
##    to: 'on'
#    platform: numeric_state
#    entity_id: sensor.on_sidewalk_person
#    above: 0
#  condition:
#    condition: and
#    conditions:
#    - condition: time
#      after: '23:00:00'
#      before: '7:00:00' 
#    - condition: state
#      entity_id: device_tracker.sean_s_iphone_16
#      state: 'home'
#  action:
#    - service: notify.mobile_app_sean_s_iphone_16
#      data:
#        title: "House Watch"
#        message: "There's a Person on The Sidewalk"
#        data:
#          push:
#            category: camera
#            thread-id: "security"
#          entity_id: camera.front_person
#          clickAction: 8
#    - delay:
#        minutes: 10
#
#- id: car_on_sidewalk
#  alias: car_on_sidewalk
#  initial_state: 'true'
#  mode: single
#  trigger:
##    platform: state
##    entity_id: binary_sensor.car_on_sidewalk 
##    to: 'on'
#    platform: numeric_state
#    entity_id: sensor.car_sidewalk_car
#    above: 0
#    for:
#      seconds: 7
#  action:
#    - choose:
#        - conditions:
#            - condition: state
#              entity_id: device_tracker.sean_s_iphone_16
#              state: 'home'
#          sequence:
#            service: notify.mobile_app_sean_s_iphone_16
#            data:
#              title: "New Car In Front of Gate"
#              message: "A new car has arrived and is parked in front of the house"
#              data:
#                push:
#                  category: camera
#                  thread-id: "security"
#                entity_id: camera.front_car
#                clickAction: 8
#    - choose:
#        - conditions:
#            - condition: state
#              entity_id: device_tracker.alenas_iphone
#              state: 'home'
#          sequence:
#            service: notify.mobile_app_alena_iphone
#            data:
#              title: "New Car In Front of Gate"
#              message: "A new car has arrived and is parked in front of the gate"
#              data:
#                push:
#                  category: camera
#                  thread-id: "security"
#                entity_id: camera.front_car
#                clickAction: 8
#    - delay:
#        minutes: 10

- id: window_or_door_opened_while_alarm_armed
  alias: window_or_door_opened_while_alarm_armed
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_door_zone_14
      to: 'on'
    - platform: state
      entity_id: binary_sensor.front_door_zone_1
      to: 'on'
    - platform: state
      entity_id: binary_sensor.laundry_room_window_zone_13
      to: 'on'
    - platform: state
      entity_id: binary_sensor.windows_1st_floor_zone_2
      to: 'on'
    - platform: state
      entity_id: binary_sensor.back_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.guest_bedroom_window_1
      to: 'on'
    - platform: state
      entity_id: binary_sensor.sebastians_room_left_window
      to: 'on'
    - platform: state
      entity_id: binary_sensor.sophies_room_ceiling_window
      to: 'on'
    - platform: state
      entity_id: binary_sensor.ecolink_closet_left_window
      to: 'on'
    - platform: state
      entity_id: binary_sensor.ecolink_garage_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.basement_sliding_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.master_bedroom_window
      to: 'on'
    - platform: state
      entity_id: binary_sensor.play_room_terrace_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.office_door
      to: 'on'
    - platform: state
      entity_id: binary_sensor.library_door
      to: 'on'
#    - platform: state
#      entity_id: binary_sensor.closet_window_1
#      to: 'on'
  condition:
    condition: or
    conditions:
    - condition: state
      entity_id: sensor.alarm_state_3_motion_sensors
      state: 'armed_away'
      for:
        minutes: 1
    - condition: state
      entity_id: sensor.alarm_state_3_motion_sensors
      state: 'triggered'  
  action:
    - service: notify.mobile_app_sean_s_iphone_16
      data_template:
        title: "House Watch"
        message: "A door or window was opened while the alarm was armed!"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "security"
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
    - service: notify.mobile_app_alena_iphone
      data_template:
        title: "House Watch"
        message: "A door or window was opened while the alarm was armed!"
        data:
          push:
            sound:
              name: "Update.caf"
              critical: 1
              volume: 1.0
            thread-id: "security"
          attachment:
            url: !secret frigate_image_url
            content-type: jpg
            hide-thumbnail: false
          clickAction: "/lovelace/8"
