
- id: person_in_front
  alias: Person In Front
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.front_person
    above: 0
#    platform: state
#    entity_id: binary_sensor.human_front
#    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
    - condition: or
      conditions:
      - condition: time
        after: '23:00:00'
        before: '7:00:00'
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'armed_away'
        for:
          minutes: 1
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'triggered'  
  action:
    service: notify.mobile_app_sean_s_iphone_12
    data:
      title: "House Watch"
      message: "There's a Person in Front of the House"
      data:
        push:
          sound:
            name: "Update.caf"
            critical: 1
            volume: 1.0
          category: camera
          thread-id: "security"
        entity_id: camera.front_person
        clickAction: 8

#      - condition: template
#        value_template: "{{ states.sensor.alarm_state_3_motion_sensors.state in ['armed_away', 'triggered'] }}"


- id: person_in_back
  alias: Person In Back
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.back_person
    above: 0
#    platform: state
#    entity_id: binary_sensor.human_back
#    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_back.attributes.last_triggered | default(0)) | int > 600)}}'
    - condition: or
      conditions:
      - condition: time
        after: '23:00:00'
        before: '7:00:00'
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'armed_away'
        for:
          minutes: 1
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'triggered'
  action:
    service: notify.mobile_app_sean_s_iphone_12
    data:
      title: "House Watch"
      message: "There's a Person in Back of the House"
      data:
        push:
          sound:
            name: "Update.caf"
            critical: 1
            volume: 1.0
          category: camera
          thread-id: "security"
        entity_id: camera.back_person
        clickAction: 8

- id: person_on_left
  alias: Person On Left
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.left_person
    above: 0
#    platform: state
#    entity_id: binary_sensor.human_left
#    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_on_left.attributes.last_triggered | default(0)) | int > 600)}}'
    - condition: or
      conditions:
      - condition: time
        after: '23:00:00'
        before: '7:00:00'
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'armed_away'
        for:
          minutes: 1
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'triggered'  
  action:
    service: notify.mobile_app_sean_s_iphone_12
    data:
      title: "House Watch"
      message: "There's a Person on the Left Side of the House"
      data:
        push:
          sound:
            name: "Update.caf"
            critical: 1
            volume: 1.0
          category: camera
          thread-id: "security"
        entity_id: camera.left_person
        clickAction: 8

- id: person_on_right
  alias: Person On Right
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.right_person
    above: 0
#    platform: state
#    entity_id: binary_sensor.human_right
#    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_on_right.attributes.last_triggered | default(0)) | int > 600)}}'
    - condition: or
      conditions:
      - condition: time
        after: '23:00:00'
        before: '7:00:00'
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'armed_away'
        for:
          minutes: 1
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'triggered'  
  action:
    service: notify.mobile_app_sean_s_iphone_12
    data:
      title: "House Watch"
      message: "There's a Person on the Right Side of the House"
      data:
        push:
          sound:
            name: "Update.caf"
            critical: 1
            volume: 1.0
          category: camera
          thread-id: "security"
        entity_id: camera.right_person
        clickAction: 8

#- id: person_in_front_hassbian
#  alias: Person In Front
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_front
#    to: 'Person Detected'
#  condition:
#    condition: or
#    conditions:
#    - condition: time
#      after: '21:00:00'
#      before: '7:00:00'
#    - condition: template
#      value_template: "{{ states.device_tracker.sean_s_iphone_12.state != 'home' }}"
#  action:
#    service: notify.mobile_app_sean_s_iphone_12
#    data:
#      title: "House Watch"
#      message: "There's a Person in Front of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.front
#
#- id: person_in_back_hassbian
#  alias: Person In Back
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_back
#    to: 'Person Detected'
#  condition:
#    condition: or
#    conditions:
#    - condition: time
#      after: '21:00:00'
#      before: '7:00:00'
#    - condition: template
#      value_template: "{{ states.device_tracker.sean_s_iphone_12.state != 'home' }}"
#  action:
#    service: notify.mobile_app_sean_s_iphone_12
#    data:
#      title: "House Watch"
#      message: "There's a Person in Back of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.back
#
#- id: person_on_left_hassbian
#  alias: Person On Left
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_left
#    to: 'Person Detected'
#  condition:
#    condition: or
#    conditions:
#    - condition: time
#      after: '21:00:00'
#      before: '7:00:00'
#    - condition: template
#      value_template: "{{ states.device_tracker.sean_s_iphone_12.state != 'home' }}"
#  action:
#    service: notify.mobile_app_sean_s_iphone_12
#    data:
#      title: "House Watch"
#      message: "There's a Person on the Left Side of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.left
#
#- id: person_on_right_hassbian
#  alias: Person On Right
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_right
#    to: 'Person Detected'
#  condition:
#    condition: or
#    conditions:
#    - condition: time
#      after: '21:00:00'
#      before: '7:00:00'
#    - condition: template
#      value_template: "{{ states.device_tracker.sean_s_iphone_12.state != 'home' }}"
#  action:
#    service: notify.mobile_app_sean_s_iphone_12
#    data:
#      title: "House Watch"
#      message: "There's a Person on the Right Side of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.right
#
#- id: car_in_front_hassbian
#  alias: Car In Front
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_front
#    to: 'Car Detected'
#  condition:
#    condition: state
#    entity_id: 'device_tracker.sean_s_iphone_12'
#    state: 'home'
#  action:
#    service: notify.mobile_app_sean_s_iphone_12
#    data:
#      title: "House Watch"
#      message: "There's a Car in Front of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.front

- id: turn_off_front_security_light_if_it_gets_windy
  alias: 'Turn Off Front Security Light If It Gets Windy'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.smartweather_wind_gust
    above: 10
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_off
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch


- id: turn_off_front_security_light_if_its_windy
  alias: "Turn Off Front Security Light If It's Windy"
  initial_state: 'true'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: numeric_state
    entity_id: sensor.smartweather_wind_gust
    above: 10
  action:
    service: switch.turn_off
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch

- id: turn_on_front_security_light_in_morning
  alias: 'Turn On Front Security Light In Morning'
  initial_state: 'true'
  trigger:
    platform: time
    at: '9:00:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch

- id: front_right_security_lights_on_if_human
  alias: 'Front+Right Security Lights on if Human'
  initial_state: 'true'
  trigger:
    - platform: numeric_state
      entity_id: sensor.front_person
      above: 0
    - platform: numeric_state
      entity_id: sensor.right_person
      above: 0
#    - platform: state
#      entity_id: binary_sensor.human_front
#      to: 'on'
#    - platform: state
#      entity_id: binary_sensor.human_right
#      to: 'on'
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch

- id: back_left_security_lights_on_if_human
  alias: 'Back+Left Security Lights on if Human'
  initial_state: 'true'
  trigger:
    - platform: numeric_state
      entity_id: sensor.back_person
      above: 0
    - platform: numeric_state
      entity_id: sensor.left_person
      above: 0
#    - platform: state
#      entity_id: binary_sensor.human_back
#      to: 'on'
#    - platform: state
#      entity_id: binary_sensor.human_left
#      to: 'on'
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch_2

#- id: garage_open
#  alias: 'Garage Door Open'
#  
#  initial_state: 'true'
#  trigger:
#    platform: state
#    entity_id: sensor.zone_14_garage_door
#    to: 'on'
#    for:
#      minutes: 10
#  action:
#    service: notify.sean_alena
#    data:
#      title: "Garage is Open"
#      message: "The garage door has been open for 10 minutes."


- id: alarm_is_on_alena_home
  alias: 'Alarm is on - Alena is home'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: device_tracker.alena_s_iphone
    to: 'home'
  condition:
    condition: state
    entity_id: sensor.alarm_state_3_motion_sensors
    state: armed_away
  action:
    service: notify.mobile_app_alena_s_iphone
    data:
      title: "Warning: Alarm On"
      message: "The alarm is turned on. Remember to turn it off before opening the door."
      data:
        push:
          thread-id: "security"

- id: alarm_is_on_sean_home
  alias: 'Alarm is on - Sean is home'
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: device_tracker.sean_s_iphone_12
    to: 'home'
  condition:
    condition: state
    entity_id: sensor.alarm_state_3_motion_sensors
    state: armed_away
  action:
    service: notify.mobile_app_sean_s_iphone_12
    data:
      title: "Warning: Alarm On"
      message: "The alarm is turned on. Remember to turn it off before opening the door."
      data:
        push:
          thread-id: "security"
      
- id: alarm_turned_on_alena
  alias: 'Alarm turned on notification - Alena'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed_away'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed'
  action:
    service: notify.mobile_app_alena_s_iphone
    data:
      title: "Alarm is On At Home"
      message: "The alarm has been activated at home"
      data:
        push:
          thread-id: "security"
  
- id: alarm_turned_off_alena
  alias: 'Alarm turned off notification - Alena'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed_away'
      to: 'disarmed'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed'
      to: 'disarmed'
  action:
    service: notify.mobile_app_alena_s_iphone
    data:
      title: "Alarm is Off At Home"
      message: "The alarm has been turned off at home"
      data:
        push:
          thread-id: "security"
      
- id: alarm_turned_on_sean
  alias: 'Alarm turned on notification - Sean'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed_away'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed'
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.sean_location', 'Traveling') }}"
  action:
    service: notify.mobile_app_sean_s_iphone_12
    data:
      title: "Alarm is On At Home"
      message: "The alarm has been activated at home"
      data:
        push:
          thread-id: "security"
        
- id: alarm_turned_off_sean
  alias: 'Alarm turned off notification - Sean'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed_away'
      to: 'disarmed'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed'
      to: 'disarmed'
  action:
    service: notify.mobile_app_sean_s_iphone_12
    data:
      title: "Alarm is Off At Home"
      message: "The alarm has been turned off at home"
      data:
        push:
          thread-id: "security"

- id: alarm_triggered
  alias: 'Alarm is triggered'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'triggered'
    - platform: state
      entity_id: sensor.alarm_state_2_1st_floor
      to: 'triggered'
    - platform: state
      entity_id: sensor.alarm_state_1_laundry
      to: 'triggered'
  action:
    service: notify.sean_alena
    data:
      title: "!!Alarm Triggered!!"
      message: "The alarm at home has been triggered and is now alarming!"
      data:
        push:
          sound:
            name: "Update.caf"
            critical: 1
            volume: 1.0
          category: camera
          thread-id: "security"
        entity_id: camera.front_person
        clickAction: 8

- id: sensor_notification
  alias: 'Sensor Notification'
  initial_state: 'false'
  trigger:
    - platform: state
      entity_id: binary_sensor.library_zone_6
      to: 'on'
    - platform: state
      entity_id: binary_sensor.master_bedroom_zone_5
      to: 'on'
    - platform: state
      entity_id: binary_sensor.master_closet_zone_8
      to: 'on'
    - platform: state
      entity_id: binary_sensor.play_room_zone_3
      to: 'on'
    - platform: state
      entity_id: binary_sensor.sophies_room_zone_10
      to: 'on'
    - platform: state
      entity_id: binary_sensor.play_room_zone_3
      to: 'on'
  action:
    service: notify.mobile_app_sean_s_iphone_12
    data:
      title: "Activity Notification"
      message: "Activity Notification"
      data:
        push:
          sound:
            name: "Alert_SpartanConnecting_Haptic.caf"
            critical: 1
            volume: 1.0
          thread-id: "security"

- id: popup_on_kiosk_back
  alias: 'Popup on Kiosk Back'
  initial_state: 'true'
  trigger:
    - platform: numeric_state
      entity_id: sensor.back_person
      above: 0
#    - platform: state
#      entity_id: binary_sensor.human_back
#      to: 'on'
    - platform: state
      entity_id: binary_sensor.camera_back_motion_alarm  
      to: 'on'
  action:
    - service: browser_mod.more_info
      data:
        entity_id: camera.back_substream
        deviceID:
          - !secret kindle_kitchen_deviceid
    - service: browser_mod.more_info
      data:
        entity_id: camera.back_substream
        deviceID:
          - !secret kindle_master_closet_deviceid
    - service: shell_command.screensaver_stop_kindle_fire_kitchen
    - service: shell_command.screensaver_stop_kindle_fire_closet
    - service: shell_command.screen_on_kindle_fire_kitchen
    - service: shell_command.screen_on_kindle_fire_closet 
    - service: timer.start
      data:
        entity_id: timer.tablet_wake_screen_timer_1
    - service: timer.start
      data:
        entity_id: timer.tablet_wake_screen_timer_2
    - service: timer.start
      data:
        entity_id: timer.tablet_close_camera_popup_timer
#    - service: browser_mod.command
#      data:
#        command: more-info
#        entity_id: camera.back
#        deviceID:
#          - !secret kindle_kitchen_deviceid
#    - service: browser_mod.command
#      data:
#        command: more-info
#        entity_id: camera.back
#        deviceID:
#          - !secret kindle_master_closet_deviceid
    # - service: fully_kiosk.screensaver_stop
    #   data:
    #     entity_id: display.kindle_fire_kitchen

- id: popup_on_kiosk_front
  alias: 'Popup on Kiosk Front'  
  initial_state: 'true'
  trigger:
#    platform: state
#    entity_id: binary_sensor.human_front
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.front_person
    above: 0
  action:
    - service: browser_mod.more_info
      data:
        entity_id: camera.front_substream
        deviceID:
          - !secret kindle_kitchen_deviceid
    - service: browser_mod.more_info
      data:
        entity_id: camera.front_substream
        deviceID:
          - !secret kindle_master_closet_deviceid
    - service: shell_command.screensaver_stop_kindle_fire_kitchen
    - service: shell_command.screensaver_stop_kindle_fire_closet
    - service: shell_command.screen_on_kindle_fire_kitchen
    - service: shell_command.screen_on_kindle_fire_closet 
    - service: timer.start
      data:
        entity_id: timer.tablet_wake_screen_timer_1
    - service: timer.start
      data:
        entity_id: timer.tablet_wake_screen_timer_2
    - service: timer.start
      data:
        entity_id: timer.tablet_close_camera_popup_timer
#    - service: browser_mod.command
#      data:
#        command: more-info
#        entity_id: camera.front
#        deviceID:
#          - !secret kindle_kitchen_deviceid
#    - service: browser_mod.command
#      data:
#        command: more-info
#        entity_id: camera.front
#        deviceID:
#          - !secret kindle_master_closet_deviceid
    # - service: fully_kiosk.screensaver_stop
    #   data:
    #     entity_id: display.kindle_fire_kitchen

- id: popup_on_kiosk_left
  alias: 'Popup on Kiosk Left'  
  initial_state: 'true'
  trigger:
    - platform: numeric_state
      entity_id: sensor.left_person
      above: 0
#    - platform: state
#      entity_id: binary_sensor.human_left
#      to: 'on'
    - platform: state
      entity_id: binary_sensor.camera_left_motion_alarm  
      to: 'on'
  action:
    - service: browser_mod.more_info
      data:
        entity_id: camera.left_substream
        deviceID:
          - !secret kindle_kitchen_deviceid
    - service: browser_mod.more_info
      data:
        entity_id: camera.left_substream
        deviceID:
          - !secret kindle_master_closet_deviceid
    - service: shell_command.screensaver_stop_kindle_fire_kitchen
    - service: shell_command.screensaver_stop_kindle_fire_closet
    - service: shell_command.screen_on_kindle_fire_kitchen
    - service: shell_command.screen_on_kindle_fire_closet 
    - service: timer.start
      data:
        entity_id: timer.tablet_wake_screen_timer_1
    - service: timer.start
      data:
        entity_id: timer.tablet_wake_screen_timer_2
    - service: timer.start
      data:
        entity_id: timer.tablet_close_camera_popup_timer
        
        
#    - service: browser_mod.command
#      data:
#        command: more-info
#        entity_id: camera.left
#        deviceID:
#          - !secret kindle_kitchen_deviceid
#    - service: browser_mod.command
#      data:
#        command: more-info
#        entity_id: camera.left
#        deviceID:
#          - !secret kindle_master_closet_deviceid
    # - service: fully_kiosk.screensaver_stop
    #   data:
    #     entity_id: display.kindle_fire_kitchen

- id: popup_on_kiosk_right
  alias: Popup on Kiosk Right
  initial_state: 'true'
  trigger:
#    platform: state
#    entity_id: binary_sensor.human_right
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.right_person
    above: 0
  action:
    - service: browser_mod.more_info
      data:
        entity_id: camera.right_substream
        deviceID:
          - !secret kindle_kitchen_deviceid
    - service: browser_mod.more_info
      data:
        entity_id: camera.right_substream
        deviceID:
          - !secret kindle_master_closet_deviceid
    - service: shell_command.screensaver_stop_kindle_fire_kitchen
    - service: shell_command.screensaver_stop_kindle_fire_closet
    - service: shell_command.screen_on_kindle_fire_kitchen
    - service: shell_command.screen_on_kindle_fire_closet 
    - service: timer.start
      data:
        entity_id: timer.tablet_wake_screen_timer_1
    - service: timer.start
      data:
        entity_id: timer.tablet_wake_screen_timer_2
    - service: timer.start
      data:
        entity_id: timer.tablet_close_camera_popup_timer
        
        
#    - service: browser_mod.command
#      data:
#        command: more-info
#        entity_id: camera.right
#        deviceID:
#          - !secret kindle_kitchen_deviceid
#    - service: browser_mod.command
#      data:
#        command: more-info
#        entity_id: camera.right
#        deviceID:
#          - !secret kindle_master_closet_deviceid
    # - service: fully_kiosk.screensaver_stop
    #   data:
    #     entity_id: display.kindle_fire_kitchen

- id: keep_fully_kiosk_screen_on_human
  alias: Keep Fully Kiosk Screen On
  initial_state: 'true'
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.tablet_wake_screen_timer_1
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.tablet_wake_screen_timer_2
  action:
    - service: shell_command.screensaver_stop_kindle_fire_kitchen
    - service: shell_command.screensaver_stop_kindle_fire_closet
    - service: shell_command.screen_on_kindle_fire_kitchen
    - service: shell_command.screen_on_kindle_fire_closet 


#  - platform: state
#    entity_id: binary_sensor.human_back
#    to: 'off'
#    for:
#      seconds: 15
#  - platform: state
#    entity_id: binary_sensor.human_front
#    to: 'off'
#    for:
#      seconds: 15
#  - platform: state
#    entity_id: binary_sensor.human_left
#    to: 'off'
#    for:
#      seconds: 15
#  - platform: state
#    entity_id: binary_sensor.human_right
#    to: 'off'
#    for:
#      seconds: 15
#  - platform: state
#    entity_id: binary_sensor.camera_left_motion_alarm  
#    to: 'off'
#    for:
#      seconds: 15
#  - platform: state
#    entity_id: binary_sensor.camera_back_motion_alarm  
#    to: 'off'
#    for:
#      seconds: 15
 
 
#
#- id: keep_fully_kiosk_screen_on_human
#  alias: Keep Fully Kiosk Screen On
#  initial_state: 'true'
#  trigger:
#  - platform: state
#    entity_id: binary_sensor.human_back
#    to: 'off'
#    for:
#      seconds: 30
#  - platform: state
#    entity_id: binary_sensor.human_front
#    to: 'off'
#    for:
#      seconds: 30
#  - platform: state
#    entity_id: binary_sensor.human_left
#    to: 'off'
#    for:
#      seconds: 30
#  - platform: state
#    entity_id: binary_sensor.human_right
#    to: 'off'
#    for:
#      seconds: 30
#  - platform: state
#    entity_id: binary_sensor.camera_left_motion_alarm  
#    to: 'off'
#    for:
#      seconds: 30
#  - platform: state
#    entity_id: binary_sensor.camera_back_motion_alarm  
#    to: 'off'
#    for:
#      seconds: 30
#  action:
#    - service: shell_command.screensaver_stop_kindle_fire_kitchen
#    - service: shell_command.screensaver_stop_kindle_fire_closet
#    - service: shell_command.screen_on_kindle_fire_kitchen
#    - service: shell_command.screen_on_kindle_fire_closet  

- id: close_popup_on_kiosk
  alias: close_popup_on_kiosk
  initial_state: 'true'
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.tablet_close_camera_popup_timer
  action:
    - service: browser_mod.close_popup

#  - platform: state
#    entity_id: binary_sensor.human_back
#    to: 'off'
#    for:
#      minutes: 1
#  - platform: state
#    entity_id: binary_sensor.human_front
#    to: 'off'
#    for:
#      minutes: 1
#  - platform: state
#    entity_id: binary_sensor.human_left
#    to: 'off'
#    for:
#      minutes: 1
#  - platform: state
#    entity_id: binary_sensor.human_right
#    to: 'off'
#    for:
#      minutes: 1
#  condition:
#    condition: and
#    conditions:
#    - condition: state
#      entity_id: binary_sensor.human_right
#      state: 'off'
#      for:
#        minutes: 1
#    - condition: state
#      entity_id: binary_sensor.human_left
#      state: 'off'
#      for:
#        minutes: 1
#    - condition: state
#      entity_id: binary_sensor.human_front
#      state: 'off'
#      for:
#        minutes: 1
#    - condition: state
#      entity_id: binary_sensor.human_back
#      state: 'off'
#      for:
#        minutes: 1

#    - service: browser_mod.command
#      data:
#        command: close-popup

# The below ends up making the "lovelace configuration has been updated, reload?" message.. Not sure why I did it..
#    - delay: '00:00:15'
#    - service: browser_mod.lovelace_reload
#      data:
#        deviceID:
#          - !secret kindle_kitchen_deviceid
#    - service: browser_mod.lovelace_reload
#      data:
#        deviceID:
#          - !secret kindle_master_closet_deviceid


- alias: 'Update Last Motion'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.comp_rm_motion_template
      to: 'on'
    - platform: state
      entity_id:
      - binary_sensor.play_room_zone_3
      - binary_sensor.living_room_zone_4
      - binary_sensor.master_bedroom_zone_5
      - binary_sensor.library_zone_6
      - binary_sensor.master_closet_zone_8
      - binary_sensor.sophies_room_zone_10
      - binary_sensor.garage_zone_12
      - binary_sensor.glass_break_sensor_zone_11
      to: 'Detected'
  action:
    service: variable.set_variable
    data:
      variable: last_motion
      attributes_template: >
        {
          "history_1": "{{ variable.state }}",
          "history_2": "{{ variable.attributes.history_1 }}",
          "history_3": "{{ variable.attributes.history_2 }}",
          "history_4": "{{ variable.attributes.history_3 }}",
          "history_5": "{{ variable.attributes.history_4 }}",
          "history_6": "{{ variable.attributes.history_5 }}",
          "history_7": "{{ variable.attributes.history_6 }}",
          "history_8": "{{ variable.attributes.history_7 }}",
          "history_9": "{{ variable.attributes.history_8 }}",
          "history_10": "{{ variable.attributes.history_9 }}"
          }


- alias: 'Update Last Door/Window'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.comp_rm_motion_template
      to: 'on'
    - platform: state
      entity_id:
      - binary_sensor.play_room_zone_3
      - binary_sensor.living_room_zone_4
      - binary_sensor.master_bedroom_zone_5
      - binary_sensor.library_zone_6
      - binary_sensor.master_closet_zone_8
      - binary_sensor.sophies_room_zone_10
      - binary_sensor.garage_zone_12
      - binary_sensor.glass_break_sensor_zone_11
      to: 'Detected'
  action:
    service: variable.set_variable
    data:
      variable: last_door_window
      attributes_template: >
        {
          "history_1": "{{ variable.state }}",
          "history_2": "{{ variable.attributes.history_1 }}",
          "history_3": "{{ variable.attributes.history_2 }}",
          "history_4": "{{ variable.attributes.history_3 }}",
          "history_5": "{{ variable.attributes.history_4 }}",
          "history_6": "{{ variable.attributes.history_5 }}",
          "history_7": "{{ variable.attributes.history_6 }}",
          "history_8": "{{ variable.attributes.history_7 }}",
          "history_9": "{{ variable.attributes.history_8 }}",
          "history_10": "{{ variable.attributes.history_9 }}"
          }

- alias: 'Record Human In Front'
  initial_state: 'on'
  trigger:
#    platform: state
#    entity_id: binary_sensor.human_front
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.front_person
    above: 0
  action:
    - service: rest_command.record_human_front

- alias: 'Record Human In Back'
  initial_state: 'on'
  trigger:
#    platform: state
#    entity_id: binary_sensor.human_back
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.back_person
    above: 0
  action:
    - service: rest_command.record_human_back

- alias: 'Record Human In Left'
  initial_state: 'on'
  trigger:
#    platform: state
#    entity_id: binary_sensor.human_left
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.left_person
    above: 0
  action:
    - service: rest_command.record_human_left

- alias: 'Record Human In Right'
  initial_state: 'on'
  trigger:
#    platform: state
#    entity_id: binary_sensor.human_right
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.right_person
    above: 0
  action:
    - service: rest_command.record_human_right
#
#- alias: cam1_history 
#  trigger:
#  - platform: mqtt
#    topic: !secret frigate_cam1_topic
#    encoding: ''
#  action:
#  - service: camera.snapshot
#    data:
#      entity_id: camera.cam1
#      filename: /config/www/cam1/latest.jpg
#  - service: shell_command.roll_frigate_history
#    data_template:
#      url: /config/www/cam1 
#      history_size: 10
#
#- alias: cam2_history 
#  trigger:
#  - platform: mqtt
#    topic: !secret frigate_cam2_topic
#    encoding: ''
#  action:
#  - service: camera.snapshot
#    data:
#      entity_id: camera.cam2
#      filename: /config/www/cam2/latest.jpg
#  - service: shell_command.roll_frigate_history
#    data_template:
#      url: /config/www/cam2
#      history_size: 10
#
#- alias: cam3_history 
#  trigger:
#  - platform: mqtt
#    topic: !secret frigate_cam3_topic
#    encoding: ''
#  action:
#  - service: camera.snapshot
#    data:
#      entity_id: camera.cam3
#      filename: /config/www/cam3/latest.jpg
#  - service: shell_command.roll_frigate_history
#    data_template:
#      url: /config/www/cam3
#      history_size: 10
#
#- alias: cam4_history 
#  trigger:
#  - platform: mqtt
#    topic: !secret frigate_cam4_topic
#    encoding: ''
#  action:
#  - service: camera.snapshot
#    data:
#      entity_id: camera.cam4
#      filename: /config/www/cam4/latest.jpg
#  - service: shell_command.roll_frigate_history
#    data_template:
#      url: /config/www/cam4
#      history_size: 10

- id: truck_outside
  alias: truck_outside
  initial_state: 'true'
  trigger:
#    platform: state
#    entity_id: binary_sensor.truck_on_road
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.truck_front
    above: 0

  action:
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.truck_outside.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.sean_s_iphone_12
                state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_12
            data:
              title: "Special Delivery?"
              message: "There's a Truck Out Front"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_person
                clickAction: 8
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.truck_outside.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.alena_s_iphone
                state: 'home'
          sequence:
            service: notify.mobile_app_alena_s_iphone
            data:
              title: "Special Delivery?"
              message: "There's a Truck Out Front"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_person
                clickAction: 8


- id: someone_at_gate
  alias: someone_at_gate
  initial_state: 'true'
  trigger:
#    platform: state
#    entity_id: binary_sensor.person_outside_gate
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.at_gate_person
    above: 0
  action:
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.someone_at_gate.attributes.last_triggered  | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.sean_s_iphone_12
                state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_12
            data:
              title: "Person at gate"
              message: "There's someone at the front gate"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_person
                clickAction: 8
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.someone_at_gate.attributes.last_triggered  | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.alena_s_iphone
                state: 'home'
          sequence:
            service: notify.mobile_app_alena_s_iphone
            data:
              title: "Person at gate"
              message: "There's someone at the front gate"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_person
                clickAction: 8
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.sean_s_iphone_12
                state: 'home'
          sequence:
            - service: mqtt.publish
              data:
                topic: !secret genesys_5490_notify_topic
                payload: !secret genesys_5490_someone_at_gate_notification

#
#- id: someone_through_gate_test
#  alias: someone_through_gate_test
#  initial_state: 'true'
#  trigger:
#    platform: mqtt
#    topic: frigate/events
#  condition:
#    - condition: and
#      conditions:
#      - condition: template
#        value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
#      - condition: state
#        entity_id: device_tracker.sean_s_iphone_12
#        state: 'home'
#      - condition: or
#        conditions:
#        - "{{ trigger.payload_json['after']['label'] == 'person' }}"
#        - "{{ 'inside_gate' in trigger.payload_json['after']['entered_zones'] }}"
#
#  action:
#    - service: notify.mobile_app_sean_s_iphone_12
#      data_template:
#        title: "Person Coming Through Gate"
#        message: "Looks like someone is going to or coming from the front gate to the front door"
#        data:
#          attachment:
#            url: !secret frigate_image_url
#            content-type: jpg
#            hide-thumbnail: false
#          push:
#            category: camera
#            thread-id: "security"
#          clickAction: 8
#          entity_id: camera.front_person
 
 
#
#- id: someone_through_gate
#  alias: someone_through_gate
#  initial_state: 'true'
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.inside_gate_person
#    above: 0
#  action:
#    - choose:
#        - conditions:
#            - condition: and
#              conditions:
#              - condition: template
#                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
#              - condition: state
#                entity_id: device_tracker.sean_s_iphone_12
#                state: 'home'
#          sequence:
#            service: notify.mobile_app_sean_s_iphone_12
#            data:
#              title: "Person Coming Through Gate"
#              message: "Looks like someone is going to or coming from the front gate to the front door"
#              data:
#                push:
#                  category: camera
#                  thread-id: "security"
#                clickAction: 8
#                entity_id: camera.front_person
#    - choose:
#        - conditions:
#            - condition: and
#              conditions:
#              - condition: template
#                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
#              - condition: state
#                entity_id: device_tracker.alena_s_iphone
#                state: 'home'
#          sequence:
#            service: notify.mobile_app_alena_s_iphone
#            data:
#              title: "Person Coming Through Gate"
#              message: "Looks like someone is going to or coming from the front gate to the front door"
#              data:
#                push:
#                  category: camera
#                  thread-id: "security"
#                clickAction: 8
#                entity_id: camera.front_person
#
#    - choose:
#        - conditions:
#            - condition: and
#              conditions:
#              - condition: template
#                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
#              - condition: state
#                entity_id: device_tracker.sean_s_iphone_12
#                state: 'home'
#          sequence:
#            - service: mqtt.publish
#              data:
#                topic: !secret genesys_5490_notify_topic
#                payload: !secret genesys_5490_someone_through_gate_notification

#iotlink/workgroup/desktop-d0cna5o/     
#
- id: someone_through_gate
  alias: someone_through_gate
  initial_state: 'true'
#  trigger:
#    platform: state
#    entity_id: binary_sensor.person_inside_gate
#    to: 'on'
#    platform: numeric_state
#    entity_id: sensor.inside_gate_person
#    above: 0
  trigger:
    platform: mqtt
    topic: frigate/events
  condition:
    condition: and
    conditions:
    - "{{ trigger.payload_json['after']['label'] == 'person' }}"
    - "{{ 'inside_gate' in trigger.payload_json['after']['entered_zones'] }}"
  action:
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.sean_s_iphone_12
                state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_12
            data_template:
              title: "Person Coming Through Gate"
              message: "Looks like someone is going to or coming from the front gate to the front door"
              data:
                attachment:
                  url: !secret frigate_image_url
                  content-type: jpg
                  hide-thumbnail: false
                push:
                  category: camera
                  thread-id: "security"
                clickAction: 8
                entity_id: camera.front_person
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.alena_s_iphone
                state: 'home'
          sequence:
            service: notify.mobile_app_alena_s_iphone
            data_template:
              title: "Person Coming Through Gate"
              message: "Looks like someone is going to or coming from the front gate to the front door"
              data:
                attachment:
                  url: !secret frigate_image_url
                  content-type: jpg
                  hide-thumbnail: false
                push:
                  category: camera
                  thread-id: "security"
                clickAction: 8
#                entity_id: camera.front_person

    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.sean_s_iphone_12
                state: 'home'
          sequence:
            - service: mqtt.publish
              data:
                topic: !secret genesys_5490_notify_topic
                payload: !secret genesys_5490_someone_through_gate_notification            


- id: car_arrived
  alias: car_arrived
  initial_state: 'true'
  trigger:
#    platform: state
#    entity_id: binary_sensor.car_pulling_up
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.car_pulling_in_car
    above: 0
  action:
    - choose:
        - conditions:
            - condition: and
              conditions:
              - condition: template
                value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.car_arrived.attributes.last_triggered | default(0)) | int > 600)}}'
              - condition: state
                entity_id: device_tracker.sean_s_iphone_12
                state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_12
            data:
              title: "Car Arrived"
              message: "The car has come through the gate into the driveway"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_car
                clickAction: 8
    - choose:
        - conditions:
            - condition: state
              entity_id: device_tracker.alena_s_iphone
              state: 'home'
          sequence:
            service: notify.mobile_app_alena_s_iphone
            data:
              title: "Car Arrived"
              message: "The car has come through the gate into the driveway"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_car
                clickAction: 8

- id: person_on_sidewalk
  alias: person_on_sidewalk
  initial_state: 'true'
  mode: single
  trigger:
#    platform: state
#    entity_id: binary_sensor.person_on_sidewalk 
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.on_sidewalk_person
    above: 0
  condition:
    condition: and
    conditions:
    - condition: time
      after: '23:00:00'
      before: '7:00:00' 
    - condition: state
      entity_id: device_tracker.sean_s_iphone_12
      state: 'home'
  action:
    - service: notify.mobile_app_sean_s_iphone_12
      data:
        title: "House Watch"
        message: "There's a Person on The Sidewalk"
        data:
          push:
            category: camera
            thread-id: "security"
          entity_id: camera.front_person
          clickAction: 8
    - delay:
        minutes: 10

- id: car_on_sidewalk
  alias: car_on_sidewalk
  initial_state: 'true'
  mode: single
  trigger:
#    platform: state
#    entity_id: binary_sensor.car_on_sidewalk 
#    to: 'on'
    platform: numeric_state
    entity_id: sensor.car_sidewalk_car
    above: 0
    for:
      seconds: 7
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: device_tracker.sean_s_iphone_12
              state: 'home'
          sequence:
            service: notify.mobile_app_sean_s_iphone_12
            data:
              title: "New Car In Front of Gate"
              message: "A new car has arrived and is parked in front of the gate"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_car
                clickAction: 8
    - choose:
        - conditions:
            - condition: state
              entity_id: device_tracker.alena_s_iphone
              state: 'home'
          sequence:
            service: notify.mobile_app_alena_s_iphone
            data:
              title: "New Car In Front of Gate"
              message: "A new car has arrived and is parked in front of the gate"
              data:
                push:
                  category: camera
                  thread-id: "security"
                entity_id: camera.front_car
                clickAction: 8
    - delay:
        minutes: 10