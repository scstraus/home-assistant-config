
  - platform: template
    sensors:
      motion_back:
        friendly_name: "Motion - Back"
        device_class: motion
        value_template: >-
          {{ is_state('camera.back', 'recording') }}

  - platform: template
    sensors:
      motion_front:
        friendly_name: "Motion - Front"
        device_class: motion
        value_template: >-
          {{ is_state('camera.front', 'recording') }}

  - platform: template
    sensors:
      motion_left:
        friendly_name: "Motion - Left"
        device_class: motion
        value_template: >-
          {{ is_state('camera.left', 'recording') }}

  - platform: template
    sensors:
      motion_right:
        friendly_name: "Motion - Right"
        device_class: motion
        value_template: >-
          {{ is_state('camera.right', 'recording') }}

#  - name: Right Tensorflow Motion
#    platform: mqtt
#    state_topic: "cameras/1/motion"
#    device_class: motion
#    availability_topic: "cameras/1/available"
#
#  - name: Left Tensorflow Motion
#    platform: mqtt
#    state_topic: "cameras/2/motion"
#    device_class: motion
#    availability_topic: "cameras/2/available"
#
#  - name: Front Tensorflow Motion
#    platform: mqtt
#    state_topic: "cameras/3/motion"
#    device_class: motion
#    availability_topic: "cameras/3/available"
#
#  - name: Back Tensorflow Motion
#    platform: mqtt
#    state_topic: "cameras/4/motion"
#    device_class: motion
#    availability_topic: "cameras/4/available"

  - platform: mqtt
    state_topic: "paradox/zone/state/1"
    name: "Front Door (Zone 1)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: door
    
  - platform: mqtt
    state_topic: "paradox/zone/state/2"
    name: "Windows 1st Floor (Zone 2)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: window
    
  - platform: mqtt
    state_topic: "paradox/zone/state/3"
    name: "Play Room (Zone 3)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: motion
    
  - platform: mqtt
    state_topic: "paradox/zone/state/4"
    name: "Living Room (Zone 4)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: motion

  - platform: mqtt
    state_topic: "paradox/zone/state/5"
    name: "Master Bedroom (Zone 5)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: motion

  - platform: mqtt
    state_topic: "paradox/zone/state/6"
    name: "Library (Zone 6)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: motion

  - platform: mqtt
    state_topic: "paradox/zone/state/7"
    name: "Zone 7"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: motion

  - platform: mqtt
    state_topic: "paradox/zone/state/8"
    name: "Master Closet (Zone 8)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: motion

  - platform: mqtt
    state_topic: "paradox/zone/state/9"
    name: "Zone 9"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: motion

  - platform: mqtt
    state_topic: "paradox/zone/state/10"
    name: "Sophies Room (Zone 10)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: motion
 
  - platform: mqtt
    state_topic: "paradox/zone/state/11"
    name: "Glass Break Sensor (Zone 11)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: vibration

  - platform: mqtt
    state_topic: "paradox/zone/state/12"
    name: "Garage (Zone 12)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: motion

  - platform: mqtt
    state_topic: "paradox/zone/state/13"
    name: "Laundry Room Window (Zone 13)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: window

  - platform: mqtt
    state_topic: "paradox/zone/state/14"
    name: "Garage Door (Zone 14)"
    qos: 1
    payload_on: "on"
    payload_off: "off"
    availability_topic: "paradox/ctrl/state"
    payload_available: "Connected"
    payload_not_available: "Disconnected"
    device_class: garage_door

#  - platform: mqtt
#    state_topic: "paradox/zone/state/14"
#    name: "Garage Door"
#    qos: 1
#    payload_on: "on"
#    payload_off: "off"
#    availability_topic: "paradox/ctrl/state"
#    payload_available: "Connected"
#    payload_not_available: "Disconnected"
#    device_class: garage_door

  - platform: mqtt
    state_topic: "paradox/ctrl/state"
    name: "Alarm Connection"
    qos: 1
    payload_on: "Connected"
    payload_off: "Disconnected"
    device_class: connectivity

# Frigate 0.5 Human 
#
#  - name: Human Back
#    platform: mqtt
#    state_topic: "frigate/back/person"
#    device_class: motion
#    availability_topic: "frigate/available"
#
#  - name: Human Front
#    platform: mqtt
#    state_topic: "frigate/on_property/person"
#    device_class: motion
#    availability_topic: "frigate/available"
#    
#  - name: Human Left
#    platform: mqtt
#    state_topic: "frigate/left/person"
#    device_class: motion
#    availability_topic: "frigate/available"
#    
#  - name: Human Right
#    platform: mqtt
#    state_topic: "frigate/right/person"
#    device_class: motion
#    availability_topic: "frigate/available"
#
#  - name: Truck On Road
#    platform: mqtt
#    state_topic: "frigate/on_street/truck"
#    device_class: motion
#    availability_topic: "frigate/available"
#
#  - name: Person Inside Gate
#    platform: mqtt
#    state_topic: "frigate/inside_gate/person"
#    device_class: motion
#    availability_topic: "frigate/available"    
#    
#  - name: Car Pulling Up  
#    platform: mqtt
#    state_topic: "frigate/car_pulling_in/car"
#    device_class: motion
#    availability_topic: "frigate/available"  
#    
#  - name: Person on Sidewalk 
#    platform: mqtt
#    state_topic: "frigate/on_sidewalk/person"
#    device_class: motion
#    availability_topic: "frigate/available"    
#
#  - name: Person on Street 
#    platform: mqtt
#    state_topic: "frigate/on_street/person"
#    device_class: motion
#    availability_topic: "frigate/available"   
#
#  - name: Person Outside Gate 
#    platform: mqtt
#    state_topic: "frigate/at_gate/person"
#    device_class: motion
#    availability_topic: "frigate/available" 
#    
#  - name: Car on Sidewalk
#    platform: mqtt
#    state_topic: "frigate/on_sidewalk/car"
#    device_class: motion
#    availability_topic: "frigate/available"     


# Frigate v0.2 human
##
#  - name: "Human Back"
#    platform: mqtt
#    state_topic: "frigate/back/objects"
#    value_template: '{{ value_json.person }}'
#    device_class: motion
##    availability_topic: "frigate/available"
#
#  - name: "Human Front"
#    platform: mqtt
#    state_topic: "frigate/front/objects"
#    value_template: '{{ value_json.person }}'
#    device_class: motion
##    availability_topic: "frigate/available"
#
#  - name: "Human Left"
#    platform: mqtt
#    state_topic: "frigate/left/objects"
#    value_template: '{{ value_json.person }}'
#    device_class: motion
##    availability_topic: "frigate/available"
#
#  - name: "Human Right"
#    platform: mqtt
#    state_topic: "frigate/right/objects"
#    value_template: '{{ value_json.person }}'
#    device_class: motion
##    availability_topic: "frigate/available"

  - platform: template
    sensors:
      basement_is_flooding:
        friendly_name: "Basement Is Flooding"
        device_class: moisture
        value_template: >-
          {{ is_state('sensor.basement_flood_sensor', '2') }}

  - platform: template
    sensors:
      sebastians_room_rain_window:
        friendly_name: "Sebastian's Window is Open and it Might Rain"
        device_class: moisture
        value_template: >-
          {{ is_state('sensor.dark_sky_icon_0d', 'rain') and 
          is_state('binary_sensor.sebastians_room_left_window','on')}}


  - platform: template
    sensors:
      sophies_room_rain_window:
        friendly_name: "Sophie's Window is Open and it Might Rain"
        device_class: moisture
        value_template: >-
          {{ is_state('sensor.dark_sky_icon_0d', 'rain') and 
          is_state('binary_sensor.sophies_room_ceiling_window','on')}}

  - platform: template
    sensors:
      garage_open_sean:
        friendly_name: "Garage is Open and Sean is Home"
        device_class: garage_door
        value_template: >-
          {{ is_state('binary_sensor.ecolink_garage_door', 'on') and (is_state('sensor.sean_location', 'Home'))}}

  - platform: template
    sensors:
      front_door_open_sean:
        friendly_name: "Front Door is Open and Sean is Home"
        device_class: door
        value_template: >-
          {{ is_state('binary_sensor.front_door_zone_1', 'on') and (not is_state('sensor.sean_location', 'Traveling'))}}


  - platform: template
    sensors:
      sebastians_window_open_sean:
        friendly_name: "Sebastians Window Open and Sean is Home"
        device_class: window
        value_template: >-
          {{ is_state('binary_sensor.sebastians_room_rain_window', 'on') and (is_state('sensor.sean_location', 'Home'))}}

  - platform: template
    sensors:
      sophies_window_open_sean:
        friendly_name: "Sophies Window Open and Sean is Home"
        device_class: window
        value_template: >-
          {{ is_state('binary_sensor.sophies_room_ceiling_window', 'on') and (is_state('sensor.sean_location', 'Home')) }}

  - platform: template
    sensors:
      trash_emergency:
        friendly_name: "Trash Really Needs to be Taken Out"
        value_template: >-
          {{ is_state('input_boolean.trash_needs_taking_out', 'on') and is_state('sensor.trash_day','Today') and is_state('sensor.sean_location', 'Home') and ((now().strftime('%H')|int) > 17) and ((now().strftime('%H')|int) < 25) }}


  - platform: template
    sensors:
      reminders_label:
        value_template: >-
          {{(((( as_timestamp(strptime(state_attr('calendar.alena_and_seans_calendar', 'start_time'),"%F %T")) - as_timestamp(now())) / 86400)|round(2)) < 2)  }}

#
#
#          {{((( (strptime(state_attr('calendar.alena_and_seans_calendar', 'start_time'),"%F %T")) - as_timestamp(now())) / 86400)|round(2)) }}
#
#{% set testing = (strptime(state_attr('calendar.alena_and_seans_calendar', 'start_time'),"%F %T"))%}
#{{testing.date()}}

#{% set testing = (state_attr('calendar.alena_and_seans_calendar', 'start_time'))%}
#{%set testing2=strptime(testing,"%F")%}
#{{testing2}}



  # - platform: template
  #   sensors:
  #     sebs_room_motion:
  #       friendly_name: Sebs Room Motion
  #       device_class: motion
  #       entity_id: camera.sebs_room
  #       value_template: "{{ is_state('camera.sebs_room', 'motion') }}"
  #       delay_off: 
  #           seconds: 30

  # - platform: template
  #   sensors:
  #     seb_naptime:
  #       friendly_name: "Sebs Movement Notification"
  #       value_template: >-
  #         {{  (((now().strftime('%H')|int) >= 22) or ((now().strftime('%H')|int) <= 6))  or (((now().strftime('%H')|int) >= 14) and ((now().strftime('%H')|int) <= 15))}}

#((((now().strftime('%H')|int) > 21) and (now().strftime('%M')|int) > 30) or (((now().strftime('%H')|int) < 7) and (now().strftime('%M')|int) < 30)) or ((((now().strftime('%H')|int) > 13) and (now().strftime('%M')|int) > 30) or (((now().strftime('%H')|int) < 16) and (now().strftime('%M')|int) < 30))

  - platform: template
    sensors:
      basement_door_open_sean:
        friendly_name: "Basement Sliding Door is Open and Sean isn't Traveling"
        device_class: door
        value_template: >-
          {{ is_state('binary_sensor.basement_sliding_door', 'on') and (is_state('sensor.sean_location', 'Home'))}}

  - platform: template
    sensors:
      car_charging_problem:
        friendly_name: "Car Charging Problem"
        device_class: problem
        value_template: >-
          {{ state_attr('binary_sensor.cooper_s_e_all4_check_control_messages', 'check_control_messages')=='Unable to charge'}}

  - platform: template 
    sensors:
      open_window_making_house_cold:
        friendly_name: "Open Window Making House Cold"
        device_class: problem
        value_template: >- 
          {{ (
              ((is_state('binary_sensor.back_door','on')) or (is_state('binary_sensor.sebastians_room_left_window','on')) or (is_state('binary_sensor.sophies_room_ceiling_window','on')) or (is_state('binary_sensor.ecolink_closet_left_window','on')) or  (is_state('binary_sensor.laundry_room_window_zone_13','on')) or (is_state('binary_sensor.windows_1st_floor_zone_2','on')) or  (is_state('binary_sensor.ecolink_garage_door','on')) or (is_state('binary_sensor.office_door','on')) or (is_state('binary_sensor.library_door','on'))) 
              and ((is_state('input_select.active_heating_profile','PROFILE_AUTO')) or (is_state('input_select.active_heating_profile','PROFILE_A')) or (is_state('input_select.active_heating_profile','PROFILE_B')) or (is_state('input_select.active_heating_profile','PROFILE_C')))
              and (states('sensor.dark_sky_temperature')|float < 18)
              ) }}


  - platform: template 
    sensors:
      open_window_making_house_hot:
        friendly_name: "Open Window Making House Hot"
        device_class: problem
        value_template: >- 
          {{ (
              ((is_state('binary_sensor.back_door','on')) or (is_state('binary_sensor.sebastians_room_left_window','on')) or (is_state('binary_sensor.sophies_room_ceiling_window','on')) or (is_state('binary_sensor.ecolink_closet_left_window','on')) or  (is_state('binary_sensor.laundry_room_window_zone_13','on')) or (is_state('binary_sensor.windows_1st_floor_zone_2','on')) or (is_state('binary_sensor.ecolink_garage_door','on')) or (is_state('binary_sensor.ecolink_garage_door','on')) or (is_state('binary_sensor.office_door','on')) or (is_state('binary_sensor.library_door','on'))) 
              and (is_state('input_select.active_heating_profile','PROFILE_E'))
              and (states('sensor.dark_sky_temperature')|float > 26)
              and (states('sensor.dark_sky_daytime_high_temperature_0d')|float > 30)
              ) }}

  - platform: template 
    sensors:
      open_window_letting_pollution_in:
        friendly_name: "Open Window Letting Pollution In"
        device_class: problem
        value_template: >- 
          {{ (
              ((is_state('binary_sensor.back_door','on')) or (is_state('binary_sensor.sebastians_room_left_window','on')) or (is_state('binary_sensor.sophies_room_ceiling_window','on')) or (is_state('binary_sensor.ecolink_closet_left_window','on')) or  (is_state('binary_sensor.laundry_room_window_zone_13','on')) or (is_state('binary_sensor.windows_1st_floor_zone_2','on')) or (is_state('binary_sensor.ecolink_garage_door','on')) or (is_state('binary_sensor.ecolink_garage_door','on')) or (is_state('binary_sensor.office_door','on')) or (is_state('binary_sensor.library_door','on'))) 
              and (states('sensor.hlubocepy_air_quality')|float > 50)
              ) }}


  - platform: template 
    sensors:
      open_window_making_air_problem:
        friendly_name: "Open Window Making Air Problem"
        device_class: problem
        value_template: >- 
          {{ (
              ((is_state('binary_sensor.back_door','on')) or (is_state('binary_sensor.sebastians_room_left_window','on')) or (is_state('binary_sensor.sophies_room_ceiling_window','on')) or (is_state('binary_sensor.ecolink_closet_left_window','on')) or  (is_state('binary_sensor.laundry_room_window_zone_13','on')) or (is_state('binary_sensor.windows_1st_floor_zone_2','on')) or  (is_state('binary_sensor.ecolink_garage_door','on')) or (is_state('binary_sensor.office_door','on')) or (is_state('binary_sensor.library_door','on'))) 
              and (((is_state('input_select.active_heating_profile','PROFILE_AUTO')) or (is_state('input_select.active_heating_profile','PROFILE_A')) or (is_state('input_select.active_heating_profile','PROFILE_B')) or (is_state('input_select.active_heating_profile','PROFILE_C')))
              and (states('sensor.dark_sky_temperature')|float < 18)
              )
              or ((is_state('input_select.active_heating_profile','PROFILE_E'))
              and (states('sensor.dark_sky_temperature')|float > 26)
              and (states('sensor.dark_sky_daytime_high_temperature_0d')|float > 30))
              or
              (states('sensor.hlubocepy_air_quality')|float > 50)
              )
              }}



  - platform: mqtt
    name: "Genesys 5490 Availability"
    state_topic: !secret genesys_5490_availability_topic
    value_template: "{{ value }}"
    payload_on: "ON"
    payload_off: "OFF"
    device_class: "connectivity"
    qos: 1

  - platform: template
    sensors:
      announce_dishes_are_clean:
        device_class: motion
        value_template: "{{ states.script.announce_dishes_are_clean.state == 'on' }}"

#      announce_left_dishwasher_door_open:
#        device_class: motion
#        value_template: "{{ states.script.announce_left_dishwasher_door_open.state == 'on' }}"
#
      announce_dishes_are_not_done_yet:
        device_class: motion
        value_template: "{{ states.script.announce_dishes_are_not_done_yet.state == 'on' }}"

      announce_forgot_to_run_the_dishes_master_closet:
        device_class: motion
        value_template: "{{ states.script.announce_forgot_to_run_the_dishes_master_closet.state == 'on' }}"

      announce_forgot_to_run_the_dishes_living_room:
        device_class: motion
        value_template: "{{ states.script.announce_forgot_to_run_the_dishes_living_room.state == 'on' }}"
        
      announce_forgot_to_run_the_dishes_master_bath:
        device_class: motion
        value_template: "{{ states.script.announce_forgot_to_run_the_dishes_master_bath.state == 'on' }}"

      announce_trash_day_trash_not_out:
        device_class: motion
        value_template: "{{ states.script.announce_trash_day_trash_not_out.state == 'on' }}"

#      announce_its_raining_with_sebastian_roof_window_open_everywhere:
#        device_class: motion
#        value_template: "{{ states.script.announce_its_raining_with_sebastian_roof_window_open_everywhere.state == 'on' }}"

      announce_its_raining_with_sebastian_roof_window_open_office:
        device_class: motion
        value_template: "{{ states.script.announce_its_raining_with_sebastian_roof_window_open_office.state == 'on' }}"

#      announce_its_raining_with_sophie_roof_window_open_everywhere:
#        device_class: motion
#        value_template: "{{ states.script.announce_its_raining_with_sophie_roof_window_open_everywhere.state == 'on' }}"
#    
      announce_its_raining_with_sophie_roof_window_open_office:
        device_class: motion
        value_template: "{{ states.script.announce_its_raining_with_sophie_roof_window_open_office.state == 'on' }}"

#      announce_water_under_the_sink_everywhere:
#        device_class: motion
#        value_template: "{{ states.script.announce_water_under_the_sink_everywhere.state == 'on' }}"

      announce_water_under_the_sink_office:
        device_class: motion
        value_template: "{{ states.script.announce_water_under_the_sink_office.state == 'on' }}"
#
#      announce_someone_at_the_gate_kitchen:
#        device_class: motion
#        value_template: "{{ states.script.announce_someone_at_the_gate_kitchen.state == 'on' }}"
#
#      announce_someone_at_the_gate_master_bath:
#        device_class: motion
#        value_template: "{{ states.script.announce_someone_at_the_gate_master_bath.state == 'on' }}"
#
#      announce_someone_at_the_gate_master_closet:
#        device_class: motion
#        value_template: "{{ states.script.announce_someone_at_the_gate_master_closet.state == 'on' }}"
#
#      announce_someone_at_the_gate_master_1st_floor_bathroom:
#        device_class: motion
#        value_template: "{{ states.script.announce_someone_at_the_gate_master_1st_floor_bathroom.state == 'on' }}"

      announce_you_left_the_sliding_door_open:
        device_class: motion
        value_template: "{{ states.script.announce_you_left_the_sliding_door_open.state == 'on' }}"

      announce_sebastian_dont_play_with_tablet:
        device_class: motion
        value_template: "{{ states.script.announce_sebastian_dont_play_with_tablet.state == 'on' }}"

      announce_thank_sebastian_for_putting_back_tablet:
        device_class: motion
        value_template: "{{ states.script.announce_thank_sebastian_for_putting_back_tablet.state == 'on' }}"

# these run the conditional cards from template in lovelace
  - platform: template
    sensors:
      human_front:
        friendly_name: "Human in Front Yard"
        device_class: motion
        value_template: >-
          {{ ((states('sensor.front_on_property_person')|float) > 0) }}
      human_back:
        friendly_name: "Human in Back Yard"
        device_class: motion
        value_template: >-
          {{ ((states('sensor.back_on_property_person')|float) > 0) }}
      human_right:
        friendly_name: "Human on Right of House"
        device_class: motion
        value_template: >-
          {{ ((states('sensor.right_on_property_person')|float) > 0) }}
      human_left:
        friendly_name: "Human on Left of House"
        device_class: motion
        value_template: >-
          {{ ((states('sensor.left_on_property_person')|float) > 0) }}



  - platform: template 
    sensors:
      sebastians_window_is_open_and_its_raining:
        friendly_name: "Sebastian's Window is Open and it's Raining"
        device_class: problem
        value_template: >- 
          {{ (states.sensor.smartweatherudp_rain_rate|float>0) and (is_state('binary_sensor.sebastians_room_left_window','on')) }}
      sophies_window_is_open_and_its_raining:
        friendly_name: "Sophie's Window is Open and it's Raining"
        device_class: problem
        value_template: >- 
          {{ (states.sensor.smartweatherudp_rain_rate|float>0) and (is_state('binary_sensor.sophies_room_ceiling_window','on')) }}